{"version":3,"file":"rp-travel-ui.mjs","sources":["../../../projects/rp-travel-ui/src/lib/rp-travel-ui.service.ts","../../../projects/rp-travel-ui/src/lib/rp-travel-ui.component.ts","../../../projects/rp-travel-ui/src/lib/shared/pipes/cod-to-city.pipe.ts","../../../projects/rp-travel-ui/src/lib/shared/pipes/councode.pipe.ts","../../../projects/rp-travel-ui/src/lib/shared/pipes/duration-to-hour-min.pipe.ts","../../../projects/rp-travel-ui/src/lib/shared/pipes/filter-city.pipe.ts","../../../projects/rp-travel-ui/src/lib/shared/pipes/highlighter.pipe.ts","../../../projects/rp-travel-ui/src/lib/shared/pipes/hotelecites.pipe.ts","../../../projects/rp-travel-ui/src/lib/shared/pipes/hour-minute.pipe.ts","../../../projects/rp-travel-ui/src/lib/shared/pipes/limit-to.pipe.ts","../../../projects/rp-travel-ui/src/lib/shared/services/environment.service.ts","../../../projects/rp-travel-ui/src/lib/home-page/services/home-page-api.service.ts","../../../projects/rp-travel-ui/src/lib/home-page/services/home-page.service.ts","../../../projects/rp-travel-ui/src/lib/shared/pipes/exchange.pipe.ts","../../../projects/rp-travel-ui/src/lib/rp-travel-ui.module.ts","../../../projects/rp-travel-ui/src/lib/flight-checkout/services/flight-checkout-api.service.ts","../../../projects/rp-travel-ui/src/lib/flight-checkout/services/flight-checkout.service.ts","../../../projects/rp-travel-ui/src/lib/flight-result/services/flight-result-api.service.ts","../../../projects/rp-travel-ui/src/lib/flight-result/interfaces.ts","../../../projects/rp-travel-ui/src/lib/flight-result/services/flight-result.service.ts","../../../projects/rp-travel-ui/src/lib/flight-search/services/flight-search-api.service.ts","../../../projects/rp-travel-ui/src/lib/flight-search/services/flight-search.service.ts","../../../projects/rp-travel-ui/src/lib/user-managment/services/user-managment-api.service.ts","../../../projects/rp-travel-ui/src/lib/user-managment/services/user-managment.service.ts","../../../projects/rp-travel-ui/src/lib/flight-confirmation/confirmation-api.service.ts","../../../projects/rp-travel-ui/src/lib/flight-confirmation/confirmation.service.ts","../../../projects/rp-travel-ui/src/public-api.ts","../../../projects/rp-travel-ui/src/rp-travel-ui.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RpTravelUiService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-rp-travel-ui',\r\n  template: `\r\n    <p>\r\n      rp-travel-ui works! CHANGEED\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class RpTravelUiComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { airPorts } from '../../home-page/interfaces';\r\n\r\n@Pipe({\r\n  name: 'codToCity'\r\n})\r\nexport class CodToCityPipe implements PipeTransform {\r\n\r\n  transform(value: string, args: airPorts[]): string {\r\n    if (!value || !args) {\r\n      return value;\r\n    }\r\n    else {\r\n      \r\n      for (let index = 0; index < args.length; index++) {\r\n        let element: airPorts = args[index];\r\n        let a = element.cityCode.toLowerCase();\r\n       \r\n        if (a == value.toLowerCase() ) {\r\n          return element.cityName\r\n        }\r\n\r\n      }\r\n      return value;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { countries } from '../../home-page/interfaces';\r\n\r\n@Pipe({\r\n  name: 'councode'\r\n})\r\nexport class CouncodePipe implements PipeTransform {\r\n  transform(value: countries[], args: string): countries[] {\r\n    if (!value || !args) {\r\n      return [];\r\n    }\r\n    else {\r\n      if(args.length< 1){\r\n        return [];\r\n       }\r\n      let result: countries[] = []\r\n      for (let index = 0; index < value.length; index++) {\r\n        let element: countries = value[index];\r\n        let a = element.countryName.toLowerCase();\r\n       \r\n        if (a.indexOf(args.toLowerCase()) != -1 ) {\r\n          result.push(element);\r\n        }\r\n\r\n      }\r\n      return result;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'durationToHourMin'\r\n})\r\nexport class DurationToHourMinPipe implements PipeTransform {\r\n\r\n  transform(value: string): any {\r\n    const duration = value.split(':');\r\n    const hours = +duration[0] ;\r\n    const minutes =  +duration[1];\r\n    return hours + 'h ' + minutes + 'm';\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { airPorts } from '../../home-page/interfaces';\r\n//this pipe take an argument as the input and return a filterd array wich include the search input\r\n@Pipe({\r\n  name: 'filterCity'\r\n})\r\nexport class FilterCityPipe implements PipeTransform {\r\n\r\n  transform(value: airPorts[], args: string): airPorts[] {\r\n    if (!value || !args) {\r\n      return [];\r\n    }\r\n    else {\r\n      if(args.length< 3){\r\n        return [];\r\n       }\r\n      let result: airPorts[] = []\r\n      for (let index = 0; index < value.length; index++) {\r\n        let element: airPorts = value[index];\r\n        let a = element.cityName.toLowerCase();\r\n        let b = element.airportCode.toLowerCase();\r\n        let c = element.airportName.toLowerCase();\r\n        if (a.indexOf(args.toLowerCase()) != -1 || b.indexOf(args.toLowerCase()) != -1 || c.indexOf(args.toLowerCase()) != -1) {\r\n          result.push(element);\r\n        }\r\n\r\n      }\r\n      return result;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'highlighter'\r\n})\r\nexport class HighlighterPipe implements PipeTransform {\r\n  transform(text: string, search:any): string {\r\n    const pattern = search\r\n      .replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\r\n      .split(' ')\r\n      .filter((t:any) => t.length > 0)\r\n      .join('|');\r\n    const regex = new RegExp(pattern, 'gi');\r\n\r\n    return search ? text.replace(regex, match => `<strong>${match}</strong>`) : text;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { hotelCities } from '../../home-page/interfaces';\r\n\r\n@Pipe({\r\n  name: 'hotelecites'\r\n})\r\nexport class HotelecitesPipe implements PipeTransform {\r\n\r\n  transform(value: hotelCities[], args: string): hotelCities[] {\r\n    if (!value || !args) {\r\n      return [];\r\n    }\r\n    else {\r\n      if(args.length< 3){\r\n       return [];\r\n      }\r\n      let result: hotelCities[] = []\r\n      for (let index = 0; index < value.length; index++) {\r\n        let element: hotelCities = value[index];\r\n        let a = element.City.toLowerCase();\r\n        let b = element.Country.toLowerCase();\r\n        if (a.indexOf(args.toLowerCase()) != -1 || b.indexOf(args.toLowerCase()) != -1  ) {\r\n          result.push(element);\r\n        }\r\n\r\n      }\r\n      return result;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'hourminute'\r\n})\r\nexport class HourMinutePipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    const hours = value / 60 | 0 ;\r\n    const minutes =  value % 60 | 0;\r\n    return hours + 'h ' + minutes + 'm';\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'limitTo'\r\n})\r\nexport class LimitToPipe implements PipeTransform {\r\n\r\n  transform(value: any[], args: number):any[] {\r\n    if(!value || !args) {\r\n      return value;\r\n  }else {\r\n    if(value.length > args){\r\n      return value.slice(0,args);\r\n    }\r\n    else{\r\n      return value\r\n    }\r\n  }\r\n    }\r\n    \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { enviromentModel } from '../interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EnvironmentService {\r\n\r\n  offlineSeats=    \"http://178.63.214.221:7026\" //ticket boarding ofline seats\r\n    searchflow =  'https://flightsearch.rhlaty.com'\r\n    BookingFlow = 'https://flightflow.rhlaty.com'\r\n    FareRules =   'https://flightprov.rhlaty.com'\r\n    asm =         'https://backofficeapi.rhlaty.com'\r\n    Apihotels =   'https://Hotelsapi.ticketboarding.com'\r\n    users =       'https://usersapi.rhlaty.com'\r\n    admin =       'https://adminapi.rhlaty.com/'\r\n    getDPayment = 'https://adminapi.rhlaty.com/'\r\n    bookHotels =  'https://Hotelsapi.ticketboarding.com'\r\n    prepay = 'https://prepayapi.rhlaty.com'\r\n    backOffice =  'https://backofficeapi.rhlaty.com'\r\n    FlightTop =   'https://flightsearch.rhlaty.com'\r\n    offers= {\r\n      //Ticket boarding offers endpoints\r\n      getAll: 'http://178.63.214.221:7893/api/GetAllOffersAPI?POS=',\r\n      getAllActive: 'https://flightsearch.ticketboarding.com/api/GetOffers?POS=',\r\n      getByID: 'https://flightsearch.ticketboarding.com/api/SelectOffer?OfferId=',\r\n      BookOffer: \"https://flightflow.ticketboarding.com/api/BookOffer\",\r\n      RetriveItineraryDetails:'/api/Admin/RetriveItineraryDetails'\r\n    }\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * \r\n   * @param env [all environment endpoints]\r\n   * configure the environment at your application startup\r\n   * follow the interface named \"enviromentModel\" to provide all the system endpoints needed\r\n   */\r\n  envConfiguration(env:enviromentModel){\r\n    this.Apihotels = env.Apihotels\r\n    this.BookingFlow = env.BookingFlow\r\n    this.FareRules = env.FareRules\r\n    this.FlightTop = env.FlightTop\r\n    this.admin = env.admin\r\n    this.asm = env.asm\r\n    this.backOffice = env.backOffice\r\n    this.bookHotels = env.bookHotels\r\n    this.getDPayment = env.getDPayment\r\n    this.prepay = env.prepay\r\n    this.offers.BookOffer = env.offers.BookOffer\r\n    this.offers.RetriveItineraryDetails = env.offers.RetriveItineraryDetails\r\n    this.offers.getAll = env.offers.getAll\r\n    this.offers.getByID = env.offers.getByID\r\n    this.offlineSeats = env.offlineSeats\r\n    this.searchflow = env.searchflow\r\n    this.users = env.users\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { Observable, catchError, map, mergeMap, retry, take } from 'rxjs';\r\nimport { BookedOffer, Itinerary, OfferDTO, airPorts, countries, currencyModel, pointOfSaleModel } from '../interfaces';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { EnvironmentService } from '../../shared/services/environment.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HomePageApiService {\r\n\r\n  public http = inject(HttpClient)\r\n  public env = inject(EnvironmentService)\r\n\r\n\r\n  constructor() { }\r\n\r\n /**\r\n   * \r\n   * @param lang \r\n   * @returns all airports depends on the current languague\r\n   */\r\n  UtilityAirports(lang:string) : Observable<airPorts[]>{\r\n    let API:string = `${this.env.backOffice}/api/GetSearchFlowMapping?LangCode=${lang}`;\r\n    return this.http.get<airPorts[]>(API).pipe(retry(3),take(1),catchError(err=>{console.log(err);throw err}))\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param baseCurrency \r\n   * @returns all currency with their changing rate depends on the base currency\r\n   */\r\n  currencyApi(baseCurrency:string) : Observable<currencyModel[]>{\r\n    let API:string = `${this.env.admin}/api/CurrencyApi?currency=${baseCurrency}`;\r\n    return this.http.get<currencyModel[]>(API).pipe(retry(3),take(1),catchError(err=>{console.log(err);throw err}))\r\n  }\r\n  \r\n\r\n  /**\r\n   * \r\n   * @returns current point of sale by fetching current ip then get this ip location/(POS)\r\n   */\r\n  pointOfSale(): Observable<pointOfSaleModel> {\r\n    let api = \"https://api.ipify.org/?format=json\";\r\n    return this.http.get<any>(api).pipe(\r\n      retry(2),\r\n      take(1),\r\n      mergeMap((result) =>{\r\n        console.log(\"show me first response\",result)\r\n       return  this.http.get<pointOfSaleModel>(\r\n          `https://ipapi.co/${result.ip}/json/`\r\n        )\r\n      }\r\n        \r\n      ),\r\n      catchError(err=>{console.log(err);throw err})\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param lang \r\n   * @returns take language and return contries and countries codes\r\n   */\r\n  getCountries(lang: string) {\r\n    let api = `${this.env.backOffice}/api/GetAllCountriesByLangName?LangCode=${lang}`;\r\n    return this.http.get<countries[]>(api).pipe( retry(2),take(1),catchError(err=>{console.log(err);throw err})\r\n    );\r\n  }\r\n/**\r\n * \r\n * @param pos \r\n * @returns All offers of type OfferDTO[] depending on the current point of sale\r\n */\r\nGetAllOffers(pos: string):Observable<{offers:OfferDTO[]}> {\r\n  let API = `${this.env.offers.getAllActive}${pos}`;\r\n  return this.http.get<{offers:OfferDTO[]}>(API).pipe(\r\n   take(1),retry(3), catchError(err => { console.log(err, \"ERROR IN GETTING ALL OFFERS\"); throw err })\r\n  )\r\n}\r\n   /**\r\n * \r\n * @param id \r\n * @returns a specific offer of type OfferDTO[] depending on the given ID\r\n */\r\n  getOfferBYId(id: number | string):Observable<OfferDTO> {\r\n    let API = `${this.env.offers.getByID}${id}`;\r\n    return this.http.get<OfferDTO>(API).pipe(\r\n      retry(3), take(1), map(\r\n        (res: any) => { return res }\r\n      ), catchError(err => { console.log(err, \"ERROR IN GETTING OFFER BY ID\"); throw err })\r\n    )\r\n  }\r\n  /**\r\n   * \r\n   * @param Source \r\n   * @param LanguageCode \r\n   * @param body \r\n   * @param searchID \r\n   * @returns It takes source, language and searchID parameters and post the body \r\n   * of the request as the booked offer model(body:BookedOffer)\r\n   */\r\n  BookOffers(Source: string, LanguageCode:string,body:BookedOffer,searchID:string ) {\r\n\r\n    let API = `${this.env.offers.BookOffer}`;\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n \r\n        'Source': Source,'LanguageCode':LanguageCode,'searchID':searchID\r\n      })\r\n    };\r\n    let Body ={\r\n      BookedOffer:body\r\n    }\r\n    return this.http.post(API, Body,httpOptions).pipe(\r\n      take(1),\r\n      map(\r\n        (result:any) => { console.log(\"show backend book offer response\",result); return result }\r\n      )\r\n    )\r\n  \r\n  }\r\n     /**\r\n * @param id\r\n * @returns itinerary depending on the given ID if the service type is offline.\r\n */\r\n     retriveItinerary(id:number |string ) {\r\n      let API: string = `${this.env.offlineSeats}${this.env.offers.RetriveItineraryDetails}?ItineraryId=${id}`;\r\n      return this.http.get<Itinerary>(API).pipe(retry(3), take(1), catchError(err => { console.log(err); throw err }));\r\n    }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { HomePageApiService } from './home-page-api.service';\r\nimport { BookedOffer, Image, Itinerary, OfferDTO,airPorts, countries, currencyModel, pointOfSaleModel } from '../interfaces';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HomePageService {\r\n\r\n  api = inject(HomePageApiService)\r\n  route=inject(ActivatedRoute)\r\n  subscription : Subscription = new Subscription() \r\n\r\n  /**\r\n   * here is all available currencies\r\n   */\r\n  allCurrency : currencyModel[] = []\r\n\r\n/**\r\n   * Here's the value of selected currency\r\n   */\r\nselectedCurrency : currencyModel = {\r\n  Currency_Code: \"KWD\",\r\n  Currency_Name: \"Kuwait Dinar\" ,\r\n  ID: 2027,\r\n  Image_Url: \"https://images.khaleejgate.com/Content/Currencies/KWD.JPG\",\r\n  Is_Base_Currency: true,\r\n  rate: 1\r\n};\r\n  /**\r\n   * here is all available airports\r\n   */\r\n  allAirports :airPorts[]=[]\r\n   /**\r\n   * here is all available countries\r\n   */\r\n   allCountries :countries[]=[]\r\n/**\r\n * here is all available offers\r\n */\r\n   allOffers:OfferDTO[]=[]\r\n  /**\r\n   * here is all available point of sale\r\n   */\r\n  pointOfSale!:pointOfSaleModel\r\n  /**\r\n   * loading state ..\r\n   */\r\n  loader : boolean = false\r\n\r\n  /**\r\n   * Getting selected offer data\r\n   */\r\n  selectedOffer!: OfferDTO;\r\n\r\n  /**number of nights properties */\r\n  numberOfNights!: number;\r\n  /**\r\n   * getting offline itinerary\r\n   */\r\n  offlineItinerary!:Itinerary;\r\n  /**\r\n   * getting offer images\r\n   */\r\n  offerImages: string[] =[];\r\n\r\n/**book offer API request value*/\r\n  submittedForm!:BookedOffer\r\n/**\r\n * Creating booking offer form\r\n */\r\n  offerCheckOutForm = new FormGroup({\r\n    FullName: new FormControl(\"\", [\r\n      Validators.required,\r\n\r\n      Validators.minLength(3),\r\n    ]),\r\n\r\n    Email: new FormControl(\"\", [\r\n      Validators.required,\r\n      Validators.email,\r\n      Validators.minLength(9),\r\n    ]),\r\n\r\n    PhoneNumber: new FormControl(\"\", [\r\n      Validators.required,\r\n      Validators.maxLength(5),\r\n    ]),\r\n\r\n    Nationality: new FormControl(\"\", [\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n    ]),\r\n  });\r\n  constructor() { }\r\n\r\n\r\n/**\r\n * \r\n * @param baseCurrency \r\n * this is for fetching all currencies and update my all currencies state (allCurrency:currencyModel[])\r\n * also updates loader state (loader:boolean)\r\n */\r\n  getCurrency(baseCurrency:string){\r\n    this.loader = true\r\n    this.subscription.add(\r\n      this.api.currencyApi(baseCurrency).subscribe((res:currencyModel[])=>{\r\n        if(res){\r\n          this.allCurrency = res\r\n          this.loader = false\r\n        }\r\n      },(err:any)=>{\r\n        console.log('get all currency error ->',err)\r\n        this.loader = false\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * set the default selected currency model according to point of sale\r\n   * @param currencyModel\r\n   */\r\n  setSelectedCurrency(currency:currencyModel){\r\n    this.selectedCurrency = currency\r\n  }\r\n\r\n  /**\r\n * \r\n * @param currentLang \r\n * this is for fetching all airports (allAirports: airPorts[]) based on current language\r\n * also updates loader state (loader:boolean)\r\n */\r\n  getAirports(currentLang:string){\r\n    this.loader = true\r\n    this.subscription.add(\r\n      this.api.UtilityAirports(currentLang).subscribe((res:airPorts[])=>{\r\n        if(res){\r\n          this.allAirports = res\r\n          this.loader = false\r\n        }\r\n      },(err:any)=>{\r\n        console.log('get all airports error ->',err)\r\n        this.loader = false\r\n      })\r\n    )\r\n  }\r\n   /**\r\n * \r\n * @param currentLang \r\n * this is for fetching all countries (allCountries :countries[]) based on current language\r\n * also updates loader state (loader:boolean)\r\n */\r\n  getCountries(currentLang:string){\r\n    this.loader = true\r\n    this.subscription.add(\r\n      this.api.getCountries(currentLang).subscribe((res:countries[])=>{\r\n        if(res){\r\n          this.allCountries = res\r\n          this.loader = false\r\n        }\r\n      },(err:any)=>{\r\n        console.log('get all countires error ->',err)\r\n        this.loader = false\r\n      })\r\n    )\r\n  }\r\n/**\r\n                  \r\n * this is for fetching and updating Point of Sale (pointOfSale:pointOfSaleModel) \r\n *and also updates loader state\r\n */\r\ngetPointOfSale(){\r\n  this.loader = true\r\n  this.subscription.add(\r\n      this.api.pointOfSale().subscribe((res)=>{\r\n        if(res){\r\n                  this.pointOfSale = res\r\n                  this.loader = false\r\n                }\r\n      },(err:any)=>{\r\n        console.log('get all pointofsales error ->',err)\r\n        this.loader = false\r\n      })\r\n  )\r\n}\r\n  /**\r\n * \r\n * @param pos \r\n * this is for fetching all offers (allOffers :OfferDTO[]) based on current POS\r\n * also updates loader state (loader:boolean)\r\n */\r\ngetAllOffers(pos:string){\r\n  this.loader = true\r\n  this.subscription.add(\r\n    this.api.GetAllOffers(pos).subscribe((res)=>{\r\n      if(res){\r\n       \r\n        this.allOffers=res.offers;\r\n        this.loader = false;\r\n        console.log(res,'show offers');\r\n       \r\n      }\r\n    },(err:any)=>{\r\n      console.log('get all offers error ->',err)\r\n      this.loader = false\r\n    })\r\n  )\r\n}\r\n/**\r\n * \r\n * @param id \r\n * @returns this is for fetching  and updating single offer (offerById:OfferDTO) depending on given id\r\n * and also updates the loader state.\r\n */\r\ngetOfferById(id:number | string){\r\n  this.loader= true;\r\n  this.subscription.add(\r\n    this.api.getOfferBYId(id).subscribe((res)=>{\r\n      console.log('get ID',id);\r\n      if (res){\r\n        this.selectedOffer=res;\r\n        this.loader= false;\r\n        console.log(\"Offer\",res);\r\n       \r\n      }\r\n        \r\n      },(err:any)=>{\r\n        console.log('get offer by ID err==>',err);\r\n        this.loader= false;\r\n    })\r\n  )\r\n}\r\n/**\r\n * \r\n * @param id \r\n * @returns this function is responsible for mapping & extracting the offer service properties.\r\n *  Also,it's responsible for retrieving the offline itinerary from the api in case of offline seats\r\n *  depending on the offer code.\r\n */\r\nextractOfferData(id:number | string){\r\n  \r\n    this.offerImages =this.selectedOffer.offerImage? [this.selectedOffer.offerImage.url] : []\r\n    let startDate=new Date(this.selectedOffer.startDate);\r\n    let endDate=new Date(this.selectedOffer.endDate);\r\n    let differenceInTime=startDate.getTime()-endDate.getTime();\r\n    this.numberOfNights=differenceInTime / (1000 * 3600 * 24);\r\n    this.selectedOffer.offerServices.map(offerService=>{\r\n      if(offerService.serviceType=='1'){            \r\n          this.subscription.add(this.api.retriveItinerary(offerService.offlineItinerary).subscribe((res:Itinerary) =>{\r\n            if(res){\r\n              this.offlineItinerary=res;\r\n            }\r\n          },(err:any)=>{\r\n            console.log('offline itinerary err==>',err);\r\n            })\r\n\r\n        \r\n\r\n        \r\n    )}\r\n    })\r\n    \r\n \r\n}\r\n/**\r\n * \r\n * @param source \r\n * @param langCode \r\n * @param phonecountrycode \r\n * @returns it send the request of book offer form with the http headers which are the passed\r\n *  parameters and with the body of the request in type of (BookedOffer)\r\n */\r\nbookOffer(source:string,langCode:string,phonecountrycode:string){\r\nlet offerId=this.route.snapshot.paramMap.get(\"id\");\r\nif(this.offerCheckOutForm.valid){\r\nlet Body: BookedOffer = {\r\n  Email: this.offerCheckOutForm.value[\"Email\"]!,\r\n  FullName: this.offerCheckOutForm.value[\"FullName\"]!,\r\n  Nationality: this.offerCheckOutForm.value[\"Nationality\"]!,\r\n  PhoneNumber: this.offerCheckOutForm.value[\"PhoneNumber\"]!,\r\n  PhoneCountryCode: phonecountrycode,\r\n  SelectedOfferCode:Number(offerId),\r\n};\r\nthis.subscription.add(\r\n  this.api.BookOffers(source,langCode!,Body,offerId!).subscribe((res:BookedOffer)=>{\r\n    if (res){\r\n      this.submittedForm=res;\r\n    }\r\n  },(err:any)=>{\r\n    console.log('Book offer err==>',err);\r\n    })\r\n)\r\n\r\n}else{\r\n  return;\r\n}\r\n\r\n}\r\n  /**\r\n   * this function is responsible to destory any opened subscription on this service\r\n   */\r\n  destroyer(){\r\n    this.subscription.unsubscribe()\r\n  }\r\n}\r\n","import { Pipe, PipeTransform, Injectable, inject } from '@angular/core';\r\nimport { currencyModel } from '../../home-page/interfaces';\r\nimport { HomePageService } from '../../home-page/services/home-page.service';\r\n\r\n\r\n@Pipe({\r\n  name: 'exchange',\r\n  pure:false\r\n})\r\nexport class ExchangePipe implements PipeTransform {\r\n  public home = inject(HomePageService)\r\n  currentCurruncy:currencyModel = this.home.selectedCurrency;\r\n\r\n  transform(value: any, args?: any): any {\r\n    this.currentCurruncy = this.home.selectedCurrency;\r\n    if(!value || !args) {\r\n      return value;\r\n    }\r\n    else {\r\n      if(args == \"value\" && this.currentCurruncy.Currency_Code == 'KWD') {\r\n        let total = value * this.currentCurruncy.rate ;\r\n        return parseFloat((Math.round(total*1000)/1000).toFixed(3));\r\n      }\r\n      if(args == \"value\" && this.currentCurruncy.Currency_Code != 'KWD') {\r\n        let total = value * this.currentCurruncy.rate;\r\n        return parseFloat((Math.round(total*100)/100).toFixed(2));\r\n      }\r\n      if(args == \"code\") {\r\n        return this.currentCurruncy.Currency_Code;\r\n      }\r\n    }\r\n\r\n  }\r\n  \r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RpTravelUiComponent } from './rp-travel-ui.component';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CodToCityPipe } from './shared/pipes/cod-to-city.pipe';\r\nimport { CouncodePipe } from './shared/pipes/councode.pipe';\r\nimport { DurationToHourMinPipe } from './shared/pipes/duration-to-hour-min.pipe';\r\nimport { FilterCityPipe } from './shared/pipes/filter-city.pipe';\r\nimport { HighlighterPipe } from './shared/pipes/highlighter.pipe';\r\nimport { HotelecitesPipe } from './shared/pipes/hotelecites.pipe';\r\nimport { HourMinutePipe } from './shared/pipes/hour-minute.pipe';\r\nimport { LimitToPipe } from './shared/pipes/limit-to.pipe';\r\nimport { ExchangePipe } from './shared/pipes/exchange.pipe';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RpTravelUiComponent,\r\n    CodToCityPipe,\r\n    CouncodePipe,\r\n    DurationToHourMinPipe,\r\n    FilterCityPipe,\r\n    HighlighterPipe,\r\n    HotelecitesPipe,\r\n    HourMinutePipe,\r\n    LimitToPipe,\r\n    ExchangePipe\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n\r\n  ],\r\n  exports: [\r\n    RpTravelUiComponent,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CodToCityPipe,\r\n    CouncodePipe,\r\n    DurationToHourMinPipe,\r\n    FilterCityPipe,\r\n    HighlighterPipe,\r\n    HotelecitesPipe,\r\n    HourMinutePipe,\r\n    LimitToPipe,\r\n    ExchangePipe\r\n  ],\r\n  providers:[HttpClient, DatePipe]\r\n})\r\nexport class RpTravelUiModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { EnvironmentService } from '../../shared/services/environment.service';\r\nimport { Cobon, flightOfflineService, passengersModel, selectedFlight } from '../interfaces';\r\nimport { catchError, mergeMap, retry, take } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FlightCheckoutApiService {\r\n\r\n  public http = inject(HttpClient)\r\n  public env = inject(EnvironmentService)\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * \r\n   * @param searchid \r\n   * @param sequenceNum \r\n   * @param providerKey \r\n   * @returns all information about the selected flight according to its searchId , sequence number and provider key\r\n   */\r\n  getSelectedFlight(searchid: string,sequenceNum: number,providerKey: number) {\r\n    let api = `${this.env.searchflow}/api/GetSelectedFlight?searchid=${searchid}&SequenceNum=${sequenceNum}&PKey=${providerKey}`;\r\n    return this.http.get<selectedFlight>(api).pipe(retry(3),take(1),catchError(err=>{throw err}));\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param SID \r\n   * @param POS \r\n   * @returns a list of offline services provided for a flight reservation using the search ID and the POS\r\n   */\r\n  offlineServices(url:string) {\r\n    return this.http.get<flightOfflineService[]>(url).pipe(retry(2),take(1),catchError(err=>{console.log(err);throw err}));\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param promo \r\n   * @param Sid \r\n   * @param sequenceNum \r\n   * @param pkey \r\n   * @returns disscount amount if the copoun code is active and valid\r\n   */\r\n  activateCobon(promo: string, Sid: string, sequenceNum: any, pkey: string) {\r\n    //check the validity of cobon and return\r\n    let api = `${this.env.BookingFlow}/api/GetPromotionDetails?PromoCode=${promo}&SearchId=${Sid}&SeqNum=${sequenceNum}&PKey=${pkey}  `;\r\n    return this.http.get<Cobon>(api).pipe(take(1));\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param searchid \r\n   * @param sequenceNum \r\n   * @param body \r\n   * @param pkey \r\n   * @param lang \r\n   * @param selectedServices \r\n   * @returns this function is resposible to call the save booking then checking flight validations and them generate your payment link\r\n   */\r\n  saveBooking(searchid: string, sequenceNum: number, body: passengersModel, pkey: string, lang:string,selectedServices:string[],ip:string,ipLocation:string) {\r\n    let api = `${this.env.BookingFlow}/api/SaveBooking?SearchId=${searchid}&SeqNum=${sequenceNum}&PKey=${pkey}`;\r\n    return this.http.post<any>(api, body).pipe(take(1),retry(1),\r\n      mergeMap(\r\n        (result) => { \r\n          let api = `${this.env.BookingFlow}/api/CheckFlightValidation?HGNum=${result.hgNumber}&Language=${lang}&SearchId=${searchid}&SeqNum=${sequenceNum}&PKey=${pkey}`;\r\n          return this.http.get<any>(api).pipe(retry(1),take(1),\r\n          mergeMap(()=>{\r\n            let apis = `${this.env.BookingFlow}/api/GetPaymentView?IP=${ip}&IPLoc=${ipLocation}&HG=${result.hgNumber}&SId=${searchid}&NotifyToken=`;\r\n            let bodys = {\r\n              UserSeletedInsurance: { ProductId: \"\" },\r\n              UserSeletedServices: { SeletedServicesCodes: selectedServices },\r\n            };\r\n            return this.http.post<any>(apis, bodys).pipe(take(1),retry(1))\r\n          }),catchError(err=>{console.log(err);throw err}));\r\n         }\r\n      ),catchError(err=>{console.log(err);throw err})\r\n    )\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { FlightCheckoutApiService } from './flight-checkout-api.service';\r\nimport { BreakDownView, Cobon, flightOfflineService, passengersModel, selectedFlight } from '../interfaces';\r\nimport { FormArray, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { passengerFareBreakDownDTOs,fare } from '../../flight-result/interfaces';\r\nimport { HomePageService } from '../../home-page/services/home-page.service';\r\n\r\ntype fareCalc = (fare:fare[])=>number;\r\ntype calcEqfare =(flightFaresDTO: passengerFareBreakDownDTOs[],type:string,farecalc:fareCalc)=>number;\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FlightCheckoutService {\r\n  api = inject(FlightCheckoutApiService)\r\n  home = inject(HomePageService)\r\n  subscription : Subscription = new Subscription()\r\n  serviceFees: number= 0;\r\n\r\n  yesOrNoVaild:boolean = false;\r\n  packageVaild:boolean = false ;\r\n  addbuttonVaild:boolean = false ;\r\n  \r\n  /**\r\n   * here is the loaded selected data \r\n   */\r\n  selectedFlight : selectedFlight | undefined = undefined\r\n\r\n  /**\r\n   * here is all the loaded offline services\r\n   */\r\n  allOfflineServices : flightOfflineService[] = []\r\n  \r\n  /**\r\n   * here is the chosen/selected offline service \r\n   */\r\n  selectedOfflineServices : string[] = []\r\n\r\n  /**\r\n   * here is all loaded offline services orgnized and grouped by type \r\n   */\r\n  organizedOfllineServices : flightOfflineService[] = []\r\n\r\n  /**\r\n   * here is the recommened service which is added to the cost/ticket by default\r\n   */\r\n  recommendedOfflineService! : flightOfflineService | undefined\r\n/**\r\n * type of booking in checkout\r\n */\r\nbookingType:string='standard'\r\n  /**\r\n   * here is the price with the recommened offline service added\r\n   */\r\n  priceWithRecommenedService: number = 0;\r\n\r\n\r\n  /**\r\n   * offline services loading state ..\r\n   */\r\n  offlineServicesLoader : boolean = false\r\n\r\n\r\n  /**\r\n   * loading state ..\r\n   */\r\n  loader : boolean = false\r\n\r\n\r\n  /**\r\n   * applying copoun code loading state ..\r\n   */\r\n  copounCodeLoader : boolean = false\r\n\r\n  /**\r\n   * this contains all the applied copon code details\r\n   */\r\n  copounCodeDetails : Cobon | undefined\r\n\r\n  /**\r\n   * this is containing the error while applying copoun code\r\n   */\r\n  copounCodeError : string = ''\r\n\r\n\r\n  /**\r\n   * this is the main form for the checkout which contains all users array forms\r\n   */\r\n  usersForm = new FormGroup({\r\n    users : new FormArray([])\r\n  });\r\n\r\n  /**\r\n   * this is a getter to return the users array forms (users) from the main form (usersForm)\r\n   */\r\n  public get usersArray() : FormArray {\r\n    return this.usersForm.get(\"users\")as FormArray\r\n  }\r\n\r\n  /**\r\n   * passengers fare disscount varriables\r\n   */\r\n  fareDisscount : [number,string,string] = [0,'',''];\r\n\r\n  /**\r\n   * passengers fare breakup values\r\n   */\r\n  fareBreackup : BreakDownView | undefined\r\n\r\n\r\n  paymentLink = new Subject();\r\n  paymentLinkFailure = new Subject();\r\n\r\n  /**\r\n   * variable to hold the value of the selected flight language\r\n   */\r\n  selectedFlightLang = new Subject();\r\n\r\n  /**\r\n   * variable to hold the value of the offline services response\r\n   */\r\n  offlineServicesResponse = new Subject<flightOfflineService[]>();\r\n\r\n  /**errors varriables */\r\n  selectedFlightError : boolean = false\r\n\r\n  /**\r\n   * this is a getter to return the users array forms (users) from the main form (usersForm)\r\n   */\r\n  usersArrayFunc() : FormArray {\r\n    return this.usersForm.get(\"users\")as FormArray\r\n  }\r\n\r\n  constructor() { }\r\n\r\n\r\n\r\n  /**\r\n   * \r\n   * @param searchId \r\n   * @param sequenceNum \r\n   * @param providerKey \r\n   * this is for fetching the selected flight data and update selected flight state (selectedFlight:selectedFlight)\r\n   * also update loader state\r\n   */\r\n  getSelectedFlightData(searchId:string,sequenceNum:number,providerKey:number){\r\n    this.loader = true\r\n    this.subscription.add(\r\n      this.api.getSelectedFlight(searchId,sequenceNum,providerKey).subscribe((res:selectedFlight)=>{\r\n        if(res){\r\n          // updating the selected flight state\r\n          this.selectedFlight = res\r\n          // updating the loading state\r\n          this.loader = false\r\n          if(res.status == 'Valid'){\r\n            this.priceWithRecommenedService += res.airItineraryDTO.itinTotalFare.amount\r\n            \r\n            // initilize users forms\r\n            this.buildUsersForm(\r\n              res.searchCriteria.adultNum,\r\n              res.searchCriteria.childNum,\r\n              res.searchCriteria.infantNum,\r\n              res.passportDetailsRequired)\r\n              this.fetchLastPassengerData()\r\n\r\n              // assign values to fare breakup and fare disscount\r\n              this.calculateFareBreakupDisscount()\r\n              this.calculatePassengersFareBreakupValue()\r\n              \r\n              this.selectedFlightLang.next(res.searchCriteria.language)\r\n          }\r\n          \r\n          else{\r\n            this.selectedFlightError = true\r\n            console.log(\"now error happens\")\r\n          }\r\n\r\n        }\r\n      },(err:any)=>{\r\n        console.log('get selected flight error ->',err)\r\n        this.loader = false\r\n        this.selectedFlightError = true\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param searchId \r\n   * @param pos \r\n   * this is for fetching the flight offline services data and update offline service state (offlineServices:flightOfflineServices[])\r\n   * also update offlineServicesLoader state\r\n   */\r\n  getAllOfflineServices(url:string,multiTypes:boolean){\r\n    this.offlineServicesLoader = true\r\n    this.subscription.add(\r\n      this.api.offlineServices(url).subscribe((res)=>{\r\n        this.allOfflineServices = [...res.map((s)=>{\r\n        this.offlineServicesResponse.next(res)\r\n          if(s.recommended){\r\n            this.recommendedOfflineService = s\r\n            this.priceWithRecommenedService += this.recommendedOfflineService.servicePrice\r\n            this.selectedOfflineServices.push(this.recommendedOfflineService.serviceCode)\r\n            return {...s,added:true,interaction:true}\r\n          }\r\n          else{\r\n            return {...s,added:false,interaction:false}\r\n          }\r\n          \r\n        })]\r\n        if(multiTypes){\r\n          this.organizedOfllineServices = this.organizeOfflineServices(this.allOfflineServices)\r\n        }\r\n        this.offlineServicesLoader = false\r\n      },(err)=>{\r\n        console.log('get selected flight offline services error ->',err)\r\n        this.offlineServicesLoader = false\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param data [all offline services data]\r\n   * @returns offline services organized and grouped with the new logic\r\n   */\r\n  organizeOfflineServices(data:flightOfflineService[]):flightOfflineService[]{\r\n    let packageServices:flightOfflineService[] = data.filter((s)=>{return s.serviceType == 'package'})\r\n    for(var i = 0 ; i<packageServices.length ; i++){\r\n      let packageSubServices = packageServices.filter((s)=>{return s.parentService == packageServices[i].parentService && s.serviceCode != packageServices[i].serviceCode})\r\n        packageServices[i].subServices = packageSubServices\r\n    }\r\n\r\n    let allPackageServiceParents:string [] = []\r\n    if(packageServices.length>0){\r\n      for(var i = 0 ; i<packageServices.length; i++){\r\n        allPackageServiceParents.push(packageServices[i].parentService || '')\r\n      }\r\n    }\r\n    allPackageServiceParents = [...new Set([...allPackageServiceParents])]\r\n    \r\n    if(allPackageServiceParents.length > 0){\r\n      for(var i =0;i<allPackageServiceParents.length; i++){\r\n        let firstParentMatch : flightOfflineService = packageServices.filter((s)=>{return s.parentService == allPackageServiceParents[i]})[0]\r\n        packageServices = [...packageServices.filter((s)=>{return s.parentService != allPackageServiceParents[i]})]\r\n        packageServices = [...packageServices,firstParentMatch]\r\n      }\r\n    }\r\n\r\n    return [...data.filter((s)=>{return s.serviceType != 'package'})].concat(packageServices)\r\n  }\r\n  \r\n\r\n\r\n  /**\r\n   * \r\n   * @param adults \r\n   * @param childs \r\n   * @param infants \r\n   * @param passportFlag\r\n   * this function is responsible for creating/building the checkout forms for each passenger according to number\r\n   * of adults and childs and infants and updates the state of the form [usersForm]\r\n   * it also build these forms depending on the paspport flag either required or not\r\n   * if is been called automatically once the selected flight state is containg data \r\n   */\r\n  buildUsersForm(adults:number,childs:number,infants:number,passportFlag:boolean){\r\n    // build form when passports details are required\r\n    if(passportFlag){\r\n\r\n      // build adults forms WITH paspport details\r\n      for(var i = 0 ; i<adults ; i++){\r\n        if(i==0){\r\n          this.usersArray.push(\r\n            new FormGroup({\r\n              title: new FormControl(\"\", [Validators.required]),\r\n              firstName: new FormControl(\"\", [\r\n                Validators.required,\r\n                Validators.pattern(\"^[a-zA-Z]+\"),\r\n                Validators.minLength(3),\r\n              ]),\r\n              middleName: new FormControl(\"\", [\r\n                Validators.pattern(\"^[a-zA-Z]+\"),\r\n                Validators.minLength(3),\r\n              ]),\r\n              lastName: new FormControl(\"\", [\r\n                Validators.required,\r\n                Validators.pattern(\"^[a-zA-Z]+\"),\r\n                Validators.minLength(3),\r\n              ]),\r\n              email: new FormControl(\"\", [\r\n                Validators.required,\r\n                Validators.email,\r\n                Validators.minLength(9),\r\n              ]),\r\n              phoneNumber: new FormControl(\"\", [\r\n                Validators.required,\r\n                Validators.maxLength(16),\r\n              ]),\r\n              countryCode: new FormControl(\"\"),\r\n              nationality: new FormControl(\"\", [\r\n                Validators.required\r\n              ]),\r\n              dateOfBirth: new FormControl(\"\", [Validators.required]),\r\n              PassengerType: new FormControl(\"ADT\"),\r\n              countryOfResidence: new FormControl(\"\", [Validators.required]),\r\n              PassportNumber: new FormControl(\"\", [Validators.required]),\r\n              PassportExpiry: new FormControl(\"\", [Validators.required]),\r\n              IssuedCountry: new FormControl(\"\", [Validators.required]),\r\n              position: new FormControl(this.usersArray.length + 1)\r\n            })\r\n          )\r\n        }\r\n        else{\r\n          this.usersArray.push(\r\n            new FormGroup({\r\n              title: new FormControl(\"\", [Validators.required]),\r\n              firstName: new FormControl(\"\", [\r\n                Validators.required,\r\n                Validators.pattern(\"^[a-zA-Z]+\"),\r\n                Validators.minLength(3),\r\n              ]),\r\n              middleName: new FormControl(\"\", [\r\n                Validators.pattern(\"^[a-zA-Z]+\"),\r\n                Validators.minLength(3),\r\n              ]),\r\n              lastName: new FormControl(\"\", [\r\n                Validators.required,\r\n                Validators.pattern(\"^[a-zA-Z]+\"),\r\n                Validators.minLength(3),\r\n              ]),\r\n              email: new FormControl(\"\", [\r\n                Validators.email,\r\n                Validators.minLength(9),\r\n              ]),\r\n              phoneNumber: new FormControl(\"\", [\r\n                Validators.maxLength(16),\r\n              ]),\r\n              countryCode: new FormControl(\"\"),\r\n              nationality: new FormControl(\"\", [\r\n                Validators.required\r\n              ]),\r\n              dateOfBirth: new FormControl(\"\", [Validators.required]),\r\n              PassengerType: new FormControl(\"ADT\"),\r\n              countryOfResidence: new FormControl(\"\", [Validators.required]),\r\n              PassportNumber: new FormControl(\"\", [Validators.required]),\r\n              PassportExpiry: new FormControl(\"\", [Validators.required]),\r\n              IssuedCountry: new FormControl(\"\", [Validators.required]),\r\n              position: new FormControl(this.usersArray.length + 1)\r\n            })\r\n          )\r\n        }\r\n        \r\n      }\r\n\r\n      // build childs forms WITH paspport details\r\n      for(var i = 0 ; i<childs ; i++){\r\n          this.usersArray.push(\r\n            new FormGroup({\r\n              title: new FormControl(\"\", [Validators.required]),\r\n              firstName: new FormControl(\"\", [\r\n                Validators.required,\r\n                Validators.pattern(\"^[a-zA-Z -']+\"),\r\n                Validators.minLength(3),\r\n              ]),\r\n              middleName: new FormControl(\"\", [\r\n                Validators.pattern(\"^[a-zA-Z]+\"),\r\n                Validators.minLength(3),\r\n              ]),\r\n              lastName: new FormControl(\"\", [\r\n                Validators.required,\r\n                Validators.pattern(\"^[a-zA-Z -']+\"),\r\n                Validators.minLength(3),\r\n              ]),\r\n              passportnum: new FormControl(\"\", [Validators.max(16)]),\r\n              dateOfBirth: new FormControl(\"\", [Validators.required]),\r\n              nationality: new FormControl(\"\", [Validators.required]),\r\n              PassengerType: new FormControl(\"CNN\"),\r\n              phoneNumber: new FormControl(\"\"),\r\n              countryCode: new FormControl(\"\"),\r\n              countryOfResidence: new FormControl(\"\", [Validators.required]),\r\n              PassportNumber: new FormControl(\"\", [Validators.required]),\r\n              PassportExpiry: new FormControl(\"\", [Validators.required]),\r\n              IssuedCountry: new FormControl(\"\", [Validators.required]),\r\n              position: new FormControl(this.usersArray.length)\r\n            })\r\n          )\r\n      }\r\n\r\n      // build infants forms WITH paspport details\r\n      for(var i = 0 ; i<infants ; i++){\r\n        this.usersArray.push(\r\n          new FormGroup({\r\n            title: new FormControl(\"\", [Validators.required]),\r\n            firstName: new FormControl(\"\", [\r\n              Validators.required,\r\n              Validators.pattern(\"^[a-zA-Z -']+\"),\r\n              Validators.minLength(3),\r\n            ]),\r\n            middleName: new FormControl(\"\", [\r\n              // Validators.required,\r\n              Validators.pattern(\"^[a-zA-Z]+\"),\r\n              Validators.minLength(3),\r\n            ]),\r\n            lastName: new FormControl(\"\", [\r\n              Validators.required,\r\n              Validators.pattern(\"^[a-zA-Z -']+\"),\r\n              Validators.minLength(3),              \r\n            ]),\r\n            passportnum: new FormControl(\"\", [Validators.maxLength(12)]),\r\n            dateOfBirth: new FormControl(\"\", [Validators.required]),\r\n            nationality: new FormControl(\"\", [Validators.required]),\r\n            PassengerType: new FormControl(\"INF\"),\r\n            phoneNumber: new FormControl(\"\"),\r\n            countryCode: new FormControl(\"\"),\r\n            countryOfResidence: new FormControl(\"\", [Validators.required]),\r\n            PassportNumber: new FormControl(\"\", [Validators.required]),\r\n            PassportExpiry: new FormControl(\"\", [Validators.required]),\r\n            IssuedCountry: new FormControl(\"\", [Validators.required]),\r\n            position: new FormControl(this.usersArray.length)\r\n          })\r\n        )\r\n      }\r\n    }\r\n\r\n    // build form when passports details are NOT required\r\n    else{\r\n      // build adults forms WITHOUT paspport details\r\n      for(var i = 0 ; i<adults ; i++){\r\n        this.usersArray.push(\r\n          new FormGroup({\r\n            title: new FormControl(\"\", [Validators.required]),\r\n            firstName: new FormControl(\"\", [\r\n              Validators.required,\r\n              Validators.pattern(\"^[a-zA-Z]+\"),\r\n              Validators.minLength(3),\r\n            ]),\r\n            middleName: new FormControl(\"\", [\r\n              Validators.pattern(\"^[a-zA-Z]+\"),\r\n              Validators.minLength(3),\r\n            ]),\r\n            lastName: new FormControl(\"\", [\r\n              Validators.required,\r\n              Validators.pattern(\"^[a-zA-Z]+\"),\r\n              Validators.minLength(3),\r\n            ]),\r\n            email: new FormControl(\"\", [\r\n              Validators.required,\r\n              Validators.email,\r\n              Validators.minLength(9),\r\n            ]),\r\n            phoneNumber: new FormControl(\"\", [\r\n              Validators.required,\r\n              Validators.maxLength(5),\r\n            ]),\r\n            countryCode: new FormControl(\"\"),\r\n            nationality: new FormControl(\"\", [\r\n              Validators.required\r\n            ]),\r\n            dateOfBirth: new FormControl(\"\", [Validators.required]),\r\n            PassengerType: new FormControl(\"ADT\"),\r\n            countryOfResidence: new FormControl(\"\", [Validators.required]),\r\n            PassportNumber: new FormControl(\"\"),\r\n            PassportExpiry: new FormControl(\"\"),\r\n            IssuedCountry: new FormControl(\"\"),\r\n            position: new FormControl(this.usersArray.length + 1)\r\n          })\r\n        )\r\n      }\r\n\r\n      // build childs forms WITHOUT paspport details\r\n      for(var i = 0 ; i<childs ; i++){\r\n        this.usersArray.push(\r\n          new FormGroup({\r\n            title: new FormControl(\"\", [Validators.required]),\r\n            firstName: new FormControl(\"\", [\r\n              Validators.required,\r\n              Validators.pattern(\"^[a-zA-Z -']+\"),\r\n              Validators.minLength(3),\r\n            ]),\r\n            middleName: new FormControl(\"\", [\r\n              Validators.pattern(\"^[a-zA-Z]+\"),\r\n              Validators.minLength(3),\r\n            ]),\r\n            lastName: new FormControl(\"\", [\r\n              Validators.required,\r\n              Validators.pattern(\"^[a-zA-Z -']+\"),\r\n              Validators.minLength(3),\r\n            ]),\r\n            passportnum: new FormControl(\"\", [Validators.max(16)]),\r\n            dateOfBirth: new FormControl(\"\", [Validators.required]),\r\n            nationality: new FormControl(\"\", [Validators.required]),\r\n            PassengerType: new FormControl(\"CNN\"),\r\n            phoneNumber: new FormControl(\"\"),\r\n            countryCode: new FormControl(\"\"),\r\n            countryOfResidence: new FormControl(\"\"),\r\n            PassportNumber: new FormControl(\"\"),\r\n            PassportExpiry: new FormControl(\"\"),\r\n            IssuedCountry: new FormControl(\"\"),\r\n            position: new FormControl(this.usersArray.length)\r\n          })\r\n        )\r\n    }\r\n\r\n    // build infants forms WITHOUT paspport details\r\n    for(var i = 0 ; i<infants ; i++){\r\n      this.usersArray.push(\r\n        new FormGroup({\r\n          title: new FormControl(\"\", [Validators.required]),\r\n          firstName: new FormControl(\"\", [\r\n            Validators.required,\r\n            Validators.pattern(\"^[a-zA-Z -']+\"),\r\n            Validators.minLength(3),\r\n          ]),\r\n          middleName: new FormControl(\"\", [\r\n            // Validators.required,\r\n            Validators.pattern(\"^[a-zA-Z]+\"),\r\n            Validators.minLength(3),\r\n          ]),\r\n          lastName: new FormControl(\"\", [\r\n            Validators.required,\r\n            Validators.pattern(\"^[a-zA-Z -']+\"),\r\n            Validators.minLength(3),              \r\n          ]),\r\n          passportnum: new FormControl(\"\", [Validators.maxLength(12)]),\r\n          dateOfBirth: new FormControl(\"\", [Validators.required]),\r\n          nationality: new FormControl(\"\", [Validators.required]),\r\n          PassengerType: new FormControl(\"INF\"),\r\n          phoneNumber: new FormControl(\"\"),\r\n          countryCode: new FormControl(\"\"),\r\n          countryOfResidence: new FormControl(\"\"),\r\n          PassportNumber: new FormControl(\"\"),\r\n          PassportExpiry: new FormControl(\"\"),\r\n          IssuedCountry: new FormControl(\"\"),\r\n          position: new FormControl(this.usersArray.length)\r\n        })\r\n      )\r\n    }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param service \r\n   * this for adding a new offline service with the selected flight\r\n   * also adding offline service cost to the whole price\r\n   */\r\n  addOfflineService(service : flightOfflineService){\r\n    let serviceIndex = this.allOfflineServices.findIndex((s)=>{return s.serviceCode == service.serviceCode})\r\n    this.selectedOfflineServices.push(service.serviceCode)\r\n    if(this.selectedFlight != undefined){\r\n      this.selectedFlight.airItineraryDTO.itinTotalFare.amount += service.servicePrice\r\n      this.priceWithRecommenedService += service.servicePrice\r\n      this.serviceFees += service.servicePrice;    \r\n         //appear validation message based on boolean value\r\n         switch(service.serviceType) {\r\n          case 'addbutton':  \r\n            this.addbuttonVaild = true;\r\n            break;\r\n      \r\n          case 'yes/no':\r\n            this.yesOrNoVaild = true;\r\n            break;\r\n          case 'package':\r\n            this.packageVaild = true;\r\n            break;\r\n        }\r\n    }\r\n    this.allOfflineServices[serviceIndex].added = true\r\n    this.allOfflineServices[serviceIndex].interaction = true\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param service \r\n   * this is to remove an already selected offline service with the selected flight\r\n   * also removing offline service from the whole price\r\n   */\r\n  removeOfflineService(service : flightOfflineService){\r\n    let serviceIndex = this.allOfflineServices.findIndex((s)=>{return s.serviceCode == service.serviceCode})\r\n    this.selectedOfflineServices = this.selectedOfflineServices.filter((s)=>{return s != service.serviceCode})\r\n    if(this.selectedFlight != undefined){ \r\n      //if interacted before \r\n          if(this.serviceFees == 0){\r\n            this.serviceFees = 0;\r\n          }\r\n          else{\r\n            this.serviceFees -= service.servicePrice;\r\n            this.priceWithRecommenedService -= service.servicePrice;\r\n            this.selectedFlight.airItineraryDTO.itinTotalFare.amount -= service.servicePrice\r\n      }\r\n         //appear validation message based on boolean value\r\n         switch(service.serviceType) {\r\n          case 'addbutton':  \r\n            this.addbuttonVaild = true;\r\n            break;\r\n      \r\n          case 'yes/no':\r\n            this.yesOrNoVaild = true;\r\n            break;\r\n          case 'package':\r\n            this.packageVaild = true;\r\n            break;\r\n        }\r\n    }\r\n    this.allOfflineServices[serviceIndex].added = false\r\n    this.allOfflineServices[serviceIndex].interaction = true\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param copounCode \r\n   * @param searchId \r\n   * @param sequenceNum \r\n   * @param providerKey\r\n   * check if the entered copoun code is valid and apply the disscount amount on the flight price\r\n   * it updates the state of [copounCodeLoader : boolean]\r\n   * it also updates the state of [copounCodeDetails:Copon]\r\n   */\r\n  applyCopounCode(copounCode:string,searchId:string,sequenceNum:number,providerKey:string){\r\n    this.copounCodeLoader = true\r\n    this.subscription.add(\r\n      this.api.activateCobon(copounCode,searchId,sequenceNum,providerKey).subscribe((res)=>{\r\n        if(res){\r\n          // apply disscount on the selected flight price amount\r\n          if(this.selectedFlight){\r\n            this.copounCodeDetails = res\r\n            this.selectedFlight.airItineraryDTO.itinTotalFare.amount -= res.promotionDetails.discountAmount\r\n          }\r\n          this.copounCodeLoader = false\r\n        }\r\n      },(err)=>{\r\n        console.log(\"apply copoun code ERROR\",err)\r\n        this.copounCodeError = err\r\n        this.copounCodeLoader = false\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  /**\r\n   * this is responsible for assigning last passengers form value before last payment\r\n   * it depends on local storage key called (lastPassengers) which contains data for array of passengers\r\n   */\r\n  fetchLastPassengerData(){\r\n     if(localStorage.getItem('lastPassengers')){\r\n      this.usersArray.setValue(JSON.parse(localStorage.getItem('lastPassengers')!))\r\n     }\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @returns error type either main form error (email & phone number) or passenger error (error happens while entering passengers data)\r\n   * IT RETURNS (Valid) in the type of string this means that every thing is OK and ready to payment\r\n   */\r\n  validatePassengersForm():string{\r\n    let error : string = ''\r\n    for(var i = 0 ; i < this.usersArray.length ; i++){\r\n      if(i == 0 && this.usersArray.at(i).get('email')?.errors != null){\r\n        error = 'mainFormError'\r\n        return 'mainFormError'\r\n      }\r\n      else if(this.usersArray.at(i).invalid){\r\n        error = 'passengersForm'\r\n        return 'passengersForm'\r\n      }\r\n      else {\r\n        error = 'Valid'\r\n        return 'Valid'\r\n      }\r\n    }\r\n\r\n    return error\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * \r\n   * @param currentCurrency \r\n   * here is the save booking function which returning the payment link if all params is good\r\n   * it updates the behaviour subject (paymentLink) with the link\r\n   * it also updates the behaviour subject (paymentLinkFailure) with the error\r\n   */\r\n  saveBooking(currentCurrency:string,type:string){\r\n    this.loader = true\r\n    this.subscription.add(\r\n      this.api.saveBooking(\r\n      this.selectedFlight?.searchCriteria.searchId!,\r\n      this.selectedFlight?.airItineraryDTO.sequenceNum!,\r\n      this.generateSaveBookingBodyParam(currentCurrency),\r\n      this.selectedFlight?.airItineraryDTO.pKey!.toString()!,\r\n      this.selectedFlight?.searchCriteria.language!,\r\n      type=='premium'?this.selectedOfflineServices:this.selectedOfflineServices.filter((s)=>{return s != this.recommendedOfflineService?.serviceCode}),\r\n      this.home.pointOfSale.ip || \"00.00.000.000\",\r\n      this.home.pointOfSale.country || 'kw'\r\n      )\r\n\r\n    .subscribe((res)=>{\r\n      this.paymentLink.next(res)\r\n      this.loader = false;\r\n    },(err)=>{\r\n      console.log(\"SAVE BOOKING ERROR\", err)\r\n      this.paymentLinkFailure.next(err)\r\n      this.loader = false\r\n      this.selectedFlightError = true\r\n    }))\r\n    \r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param currentCurrency \r\n   * @returns the passenger details (body param) needed by backend to make the save booking action\r\n   */\r\n  generateSaveBookingBodyParam(currentCurrency:string):passengersModel{\r\n    for(var i = 0 ; i < this.usersArray.length; i++){\r\n      if(this.usersArray.at(i).get('title')!.value == 'Male'){\r\n        this.usersArray.at(i).get('title')!.setValue('Mr')\r\n      }\r\n      else if(this.usersArray.at(i).get('title')!.value == 'Female'){\r\n        this.usersArray.at(i).get('title')!.setValue('Ms')\r\n      }\r\n      if(this.usersArray.at(i).get('phoneNumber')?.value != ''){\r\n        this.usersArray.at(i).get('countryCode')?.setValue((<string>this.usersArray.at(i).get('phoneNumber')?.value.dialCode).replace(\"+\",''))\r\n        this.usersArray.at(i).get('phoneNumber')?.setValue(this.usersArray.at(i).get('phoneNumber')?.value.number)\r\n      }\r\n\r\n      \r\n      this.usersArray.at(i).get('countryOfResidence')?.setValue(this.home.allCountries\r\n        .filter(c=>{return c.countryName == this.usersArray.at(i).get('countryOfResidence')?.value})[0].pseudoCountryCode)\r\n        this.usersArray.at(i).get('IssuedCountry')?.setValue(this.usersArray.at(i).get('countryOfResidence')?.value)\r\n        this.usersArray.at(i).get('nationality')?.setValue(this.usersArray.at(i).get('countryOfResidence')?.value)\r\n    }\r\n    let object : passengersModel = {\r\n      bookingEmail:this.usersArray.at(0).get('email')?.value,\r\n      DiscountCode:this.copounCodeDetails?.promotionDetails.discountCode || '',\r\n      passengersDetails:this.usersArray.value,\r\n      UserCurrency:currentCurrency\r\n    }\r\n    return object\r\n  }\r\n\r\n\r\n  //-----------------------> Starting Building Fare breakup Functionalities\r\n\r\n  /**\r\n   * this function is responsiple for getting disscount from passengers fare breakup\r\n   * it also updates the disscount state fareDisscount : [number,string,string]\r\n   */\r\n  calculateFareBreakupDisscount(){\r\n    if(this.selectedFlight?.airItineraryDTO.passengerFareBreakDownDTOs){\r\n      this.fareDisscount = this.returnPassTotalFarDifferance(\r\n        this.selectedFlight.airItineraryDTO.passengerFareBreakDownDTOs,\r\n        this.selectedFlight.airItineraryDTO.itinTotalFare.amount,\r\n        this.selectedFlight.airItineraryDTO.itinTotalFare.totalTaxes,\r\n        this.selectedFlight.airItineraryDTO.itinTotalFare.currencyCode,\r\n        this.calcEqfare,this.returnCorrectFare\r\n        );\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * \r\n   * @param flightFaresDTO \r\n   * @param totalAmount \r\n   * @param totalTax \r\n   * @param curruncy \r\n   * @param calcEqfare \r\n   * @param fareCalc \r\n   * @returns value of discount or service fees\r\n   */\r\n  returnPassTotalFarDifferance(flightFaresDTO: passengerFareBreakDownDTOs[], totalAmount: number,totalTax:number,curruncy:string,calcEqfare:calcEqfare,fareCalc:fareCalc): [number, string, string] {\r\n    let AdtFares = calcEqfare(flightFaresDTO,'ADT',fareCalc);\r\n    let childFare = calcEqfare(flightFaresDTO,'CNN',fareCalc);\r\n    let infentFare = calcEqfare(flightFaresDTO,'INF',fareCalc);\r\n    let TotalFare = AdtFares + childFare + infentFare + totalTax;\r\n    let fareDiff = totalAmount - TotalFare;\r\n     if (fareDiff > 0) {\r\n       return [Math.round(fareDiff), 'Service Fees',curruncy]\r\n     } else if (fareDiff < 0) {\r\n       return [Math.round(-1 * fareDiff), 'Discount',curruncy]\r\n     } else {\r\n       return [0 , '','KWD'];\r\n     }\r\n \r\n   }\r\n\r\n\r\n   /**\r\n   * \r\n   * @param flightFaresDTO \r\n   * @param type \r\n   * @param farecalc \r\n   * @returns numer of passenger * fare of passenger\r\n   */\r\n   calcEqfare(flightFaresDTO: passengerFareBreakDownDTOs[],type:string,farecalc:fareCalc):number{\r\n    let fare = farecalc(flightFaresDTO.filter((v)=>v.passengerType === type)[0]?.flightFaresDTOs);\r\n    let quntity = flightFaresDTO.find((v)=>v.passengerType === type)?.passengerQuantity;\r\n    return  fare && quntity ? fare * quntity : 0;\r\n   }\r\n\r\n   /**\r\n   * \r\n   * @param fare \r\n   * @returns validate equivelent fare\r\n   */\r\n\r\n   returnCorrectFare(fare:fare[]):number{\r\n    if(fare){     \r\n     let equivfare = fare.find(v=>v.fareType.toLowerCase() === 'equivfare')?.fareAmount;\r\n     let totalFare = fare.find(v=>v.fareType.toLowerCase() === 'totalfare')?.fareAmount;\r\n     let totalTax  = fare.find(v=>v.fareType.toLowerCase() === 'totaltax')?.fareAmount;\r\n     if(equivfare != undefined && totalFare != undefined && totalTax != undefined){\r\n      return equivfare > 0 ? equivfare : totalFare - totalTax;\r\n     }\r\n     else{\r\n      return 0\r\n     }\r\n     \r\n    } else{\r\n      return 0\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  calculatePassengersFareBreakupValue(){\r\n      let AdtFares  = this.selectedFlight?.airItineraryDTO.passengerFareBreakDownDTOs?.find(v=>v.passengerType ==='ADT');\r\n      let ChildFare = this.selectedFlight?.airItineraryDTO.passengerFareBreakDownDTOs?.find(v=>v.passengerType ==='CNN');\r\n      let infFare   = this.selectedFlight?.airItineraryDTO.passengerFareBreakDownDTOs?.find(v=>v.passengerType ==='INF');\r\n      this.fareBreackup = {\r\n        ADT:{\r\n          totalFare:AdtFares?this.returnPassTotalFar(AdtFares.flightFaresDTOs,AdtFares.passengerQuantity,this.returnCorrectFare):[NaN,'KWD'],\r\n          ScFare:AdtFares?this.returnPassFareScatterd(AdtFares.flightFaresDTOs,AdtFares.passengerQuantity,this.returnCorrectFare):[NaN,'KWD',NaN]\r\n        },\r\n        CNN:{\r\n          totalFare:ChildFare?this.returnPassTotalFar(ChildFare.flightFaresDTOs,ChildFare.passengerQuantity,this.returnCorrectFare):[NaN,'KWD'],\r\n          ScFare:ChildFare?this.returnPassFareScatterd(ChildFare.flightFaresDTOs,ChildFare.passengerQuantity,this.returnCorrectFare):[NaN,'KWD',NaN]\r\n        },\r\n        INF:{\r\n          totalFare:infFare?this.returnPassTotalFar(infFare.flightFaresDTOs,infFare.passengerQuantity,this.returnCorrectFare):[NaN,'KWD'],\r\n          ScFare:infFare?this.returnPassFareScatterd(infFare.flightFaresDTOs,infFare.passengerQuantity,this.returnCorrectFare):[NaN,'KWD',NaN]\r\n        }\r\n      }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param flightFaresDTO \r\n   * @param passNumber \r\n   * @returns [total value ,curruncy code]\r\n   */\r\n  returnPassTotalFar(flightFaresDTO:fare[],passNumber:number,calcfare:fareCalc):[number,string]{\r\n    let Total:fare = flightFaresDTO.filter(v=>v.fareType.toLowerCase() === 'equivfare')[0];\r\n    return Total?[calcfare(flightFaresDTO)*passNumber,Total.currencyCode] :[NaN,'KWD'];\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param flightFaresDTO \r\n   * @param passNumber \r\n   * @returns [total value per passenger ,curruncy code , number of passenger]\r\n   */\r\n  returnPassFareScatterd(flightFaresDTO:fare[],passNumber:number,calcfare:fareCalc):[number,string,number]{\r\n    let Total:fare = flightFaresDTO.filter(v=>v.fareType.toLowerCase() === 'equivfare')[0];\r\n    return Total?[calcfare(flightFaresDTO),Total.currencyCode,passNumber] :[NaN,'KWD',NaN];\r\n  }\r\n\r\n  //-----------------------> End of Building Fare breakup Functionalities\r\n\r\n\r\n  updatePackageServiceInteractionValidation(val:boolean){\r\n    this.packageVaild = val\r\n  }\r\n\r\n  updateYesOrNoServiceInteractionValidation(val:boolean){\r\n    this.yesOrNoVaild = val\r\n  }\r\n\r\n  /**\r\n   * this function is responsible to destory any opened subscription on this service\r\n   */\r\n  destroyer(){\r\n    // this.subscription.unsubscribe()\r\n    this.selectedFlight  = undefined\r\n    this.allOfflineServices  = []\r\n    this.selectedOfflineServices  = []\r\n    this.recommendedOfflineService = undefined\r\n    this.priceWithRecommenedService = 0;\r\n    this.offlineServicesLoader = false\r\n    this.loader  = false\r\n    this.copounCodeLoader  = false\r\n    this.copounCodeDetails = undefined\r\n    this.copounCodeError  = ''\r\n    this.usersForm = new FormGroup({\r\n      users : new FormArray([])\r\n    });\r\n    this.fareDisscount = [0,'',''];\r\n    this.fareBreackup = undefined\r\n    this.paymentLink = new Subject();\r\n    this.paymentLinkFailure = new Subject();\r\n    this.selectedFlightLang = new Subject();\r\n    this.offlineServicesResponse = new Subject();\r\n    this.selectedFlightError = false\r\n\r\n    this.yesOrNoVaild = false;\r\n    this.packageVaild = false ;\r\n    this.addbuttonVaild = false ;\r\n    this.serviceFees = 0;\r\n    this.organizedOfllineServices = []\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { EnvironmentService } from '../../shared/services/environment.service';\r\nimport { FareRules, FlightSearchResult, SearchFlightModule, fareRulesResponse } from '../interfaces';\r\nimport { catchError, retry, take } from 'rxjs';\r\nimport { searchFlightModel } from '../../flight-search/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FlightResultApiService {\r\n\r\n  public http = inject(HttpClient)\r\n  public env = inject(EnvironmentService)\r\n\r\n  constructor() { }\r\n\r\n\r\n  searchFlight(searchFlight: SearchFlightModule) {\r\n    let api: string = `${this.env.searchflow}/flights/flightsSearch/${searchFlight.lan}/${searchFlight.currency}/${searchFlight.pointOfReservation}/${searchFlight.flightType}/${searchFlight.flightsInfo}/${searchFlight.passengers}/${searchFlight.Cclass}/${searchFlight.showDirect}/all/0/0/Direct?searchID=${searchFlight.serachId}`;\r\n    return this.http.get<FlightSearchResult>(api).pipe(retry(2), take(1),catchError(err=>{console.log(err);throw err}) );;\r\n  }\r\n\r\n  fareRules(sid: string, seq: number, pKey: string) {\r\n    let api = `${this.env.FareRules}/api/GetFareRules?SId=${sid}&SeqNum=${seq}&PKey=${pKey}`;\r\n    console.log(api);\r\n\r\n    return this.http.get<fareRulesResponse>(api).pipe(take(1));\r\n  }\r\n}\r\n","// this is the base model for the backend response\r\nexport interface baseSearchResult {\r\n    status: string;\r\n    searchResultException:{code:string,exceptionMessage:string}\r\n}\r\n  \r\n/**\r\n * this is the the model of the backend on case of status 200\r\n */\r\nexport interface FlightSearchResult extends baseSearchResult  {\r\n    pnr?:any;\r\n    fareAmount?:any;\r\n    airlines: any[];\r\n    airItineraries: airItineraries[];\r\n    searchCriteria: searchCriteria;\r\n    cabinClasses:string[]\r\n    passengersDetails?: any[],\r\n}\r\n\r\n/**\r\n * containing the search criteria of the current request\r\n */\r\nexport interface searchCriteria {\r\n    adultNum: number;\r\n    childNum: number;\r\n    currency: string;\r\n    flights: searchCriteriaFlights[];\r\n    flightType: string;\r\n    infantNum: number;\r\n    language: string;\r\n    pos: string;\r\n    preferredAirline: any;\r\n    searchId: string;\r\n    selectDirectFlightsOnly: boolean;\r\n    selectedFlightClass: string;\r\n    source: string;\r\n    totalPassengersNum: number;\r\n}\r\n\r\nexport interface searchCriteriaFlights{\r\n    arrivingTo: string;\r\n    departingFrom: string;\r\n    departingOnDate: string;\r\n}\r\n\r\n\r\n/**\r\n * flight itinerary Mdel\r\n */\r\nexport interface airItineraries {\r\n    referralLink?:string; \r\n    otaName?:string;\r\n    providerLogo?:string;\r\n    pKey?: number;\r\n    flightSignature?:string;\r\n    overNight?:number;\r\n    stopsTime?:number;\r\n    experiance:number;\r\n    sequenceNum: number;\r\n    isRefundable: boolean;\r\n    itinTotalFare: itinTotalFare;\r\n    totalDuration: number;\r\n    deptDate: string;\r\n    arrivalDate: string;\r\n    cabinClass: string;\r\n    flightType: string;\r\n    allJourney: {\r\n      flights: flight[];\r\n    };\r\n    baggageInformation: baggageInformation[];\r\n    searchCriteria?:searchCriteria;\r\n    passengerFareBreakDownDTOs?:passengerFareBreakDownDTOs[]\r\n}\r\n\r\n\r\n/**\r\n * Filter Form Model \r\n * [this is a generic model for the filter containing all filter criteria and you can use only what you need]\r\n */\r\n\r\nexport interface flighFilterForm{\r\n  airlines?:string[]\r\n  bookingSite?:string[]\r\n  stopsForm:{noStops:boolean,oneStop:boolean,twoAndm:boolean}\r\n  sameAirline?:boolean\r\n  priceSlider?:number[]\r\n  durationSlider?:number[]\r\n  dpartingSlider?:number[]\r\n  arrivingSlider?:number[]\r\n  returnSlider?:number[]\r\n  experience?:{overNight:boolean,longStops:boolean}\r\n  flexibleTickets?:{refund:boolean,nonRefund:boolean}\r\n}\r\n\r\n\r\n/**\r\n * Filter Model \r\n * [this is a generic model for the filter containing all filter criteria and you can use only what you need]\r\n */\r\n\r\nexport class flightResultFilter{\r\n  constructor(\r\n    public sameAirline:boolean,\r\n    public  priceMin?:number,\r\n    public  priceMax?:number,\r\n    public durationMin?:number,\r\n    public durationMax?:number,\r\n    public depatingMin?:number,\r\n    public departingMax?:number,\r\n    public  arrivingMin?:number,\r\n    public arrivingMax?:number,\r\n    public returnMin?:number,\r\n    public returnMax?:number,\r\n    public stops?:number[],\r\n    public experience?:boolean[],\r\n    public flexibleTicket?:boolean[],\r\n    public airlines?:string[],\r\n    public bookingSites?:string[]\r\n  ){}\r\n}\r\n\r\n\r\nexport interface filterFlightInterface{\r\n   sameAirline?:boolean,\r\n  priceMin?:number,\r\n  priceMax?:number,\r\n durationMin?:number,\r\n  durationMax?:number,\r\n   depatingMin?:number,\r\n   departingMax?:number,\r\n    arrivingMin?:number,\r\n   arrivingMax?:number,\r\n   returnMin?:number,\r\n   returnMax?:number,\r\n   stops?:number[],\r\n   experience?:boolean[],\r\n   flexibleTicket?:boolean[],\r\n   airlines?:string[],\r\n   bookingSites?:string[]\r\n}\r\n\r\n/**\r\n * this model is mapping to flight fare rules response\r\n */\r\nexport interface FareRules {\r\n  departureCountry: string;\r\n  arrivalCountry: string;\r\n  adtRules: fares[];\r\n  cnnRules: fares[];\r\n  infRules: fares[];\r\n}\r\n\r\nexport interface fares {\r\n  fareRule: string;\r\n  title: string;\r\n}\r\nexport interface fareRulesResponse{\r\n  errorMessage:string;\r\n  fares:FareRules[];\r\n}\r\nexport interface itinTotalFare {\r\n    amount : number\r\n    fareAmount? : number\r\n    promoCode? : string\r\n    promoDiscount? : number\r\n    currencyCode : string\r\n    totalTaxes : number\r\n}\r\n\r\nexport interface flight {\r\n    flightDTO: FlightDTO[];\r\n    elapsedTime: number;\r\n    stopsNum: number;\r\n    flightAirline:FlightAirline\r\n}\r\n\r\nexport interface FlightDTO {\r\n    supplierRefID : any\r\n    transitPosition?:string;\r\n    transitWidth?:number;\r\n    sequenceNum?: number;\r\n    isStopSegment: boolean;\r\n    deptTime: any;\r\n    landTime: any;\r\n    departureDate: string;\r\n    arrivalDate: string;\r\n    flightAirline: {\r\n      airlineCode: string;\r\n      airlineName: string;\r\n      airlineLogo: string;\r\n      alternativeBusinessName: string;\r\n      languageCode: string;\r\n      passportDetailsRequired: boolean;\r\n    };\r\n    operatedAirline: {\r\n      airlineCode: string;\r\n      airlineName: string;\r\n      airlineLogo: string;\r\n      alternativeBusinessName: string;\r\n      languageCode: string;\r\n      passportDetailsRequired: boolean;\r\n    };\r\n    durationPerLeg: number;\r\n    departureTerminalAirport: {\r\n      airportCode: string;\r\n      airportName: string;\r\n      cityName: string;\r\n      cityCode: string;\r\n      countryCode: string;\r\n      countryName: string;\r\n      regionName: string;\r\n    };\r\n    arrivalTerminalAirport: {\r\n      airportCode: string;\r\n      airportName: string;\r\n      cityName: string;\r\n      cityCode: string;\r\n      countryCode: string;\r\n      countryName: string;\r\n      regionName: string;\r\n    };\r\n    transitTime: string;\r\n    flightInfo: {\r\n      flightNumber: string;\r\n      equipmentNumber: string;\r\n      mealCode: string;\r\n      bookingCode: string;\r\n      cabinClass: string;\r\n    };\r\n    segmentDetails: {\r\n      uniqueKey: any;\r\n      baggage: string;\r\n      childBaggage: any;\r\n      infantBaggage: any;\r\n    };\r\n}\r\n\r\n  \r\nexport interface FlightAirline{\r\n    airlineCode: string\r\n    airlineLogo: string\r\n    airlineName: string\r\n    alternativeBusinessName: string\r\n    passportDetailsRequired: boolean\r\n}\r\n\r\nexport interface baggageInformation {\r\n    baggage: string;\r\n    childBaggage: string;\r\n    infantBaggage: string;\r\n    airlineName: string;\r\n    deptCity: string;\r\n    landCity: string;\r\n    flightNum: string;\r\n}\r\n\r\nexport interface passengerFareBreakDownDTOs{\r\n    key:string,\r\n    cancelPenaltyDTOs:Penelty[],\r\n    changePenaltyDTOs:Penelty[],\r\n    passengerQuantity:number,\r\n    passengersRef:any[],\r\n    pricingMethod:string,\r\n    passengerType:string,\r\n    flightFaresDTOs:fare[],\r\n    taxes:taxes[]\r\n}\r\n\r\n  export interface Penelty {\r\n    curency:string,\r\n    percentage:number,\r\n    price:number\r\n}\r\n  export interface fare {\r\n    currencyCode:string,\r\n    fareAmount:number,\r\n    fareType:string\r\n}\r\n  export interface taxes {\r\n    amount:number,\r\n    contentl:string,\r\n    countryCode?:string | null,\r\n    taxCode:string,\r\n    taxCurrencyCode:string,\r\n    taxName?:string | null\r\n}\r\nexport class SearchFlightModule { \r\n  \r\n  constructor (\r\n    public lan:string,\r\n    public currency:string,\r\n    public pointOfReservation:string,\r\n    public flightType:string,\r\n    public flightsInfo:string,\r\n    public passengers:string,\r\n    public Cclass:string,\r\n    public serachId:any,\r\n    public showDirect :boolean,\r\n    public preferredAirLine :string,\r\n\r\n\r\n    \r\n    ){} \r\n\r\n}\r\n\r\nexport interface customAirlineFilter {\r\n  logo: string;\r\n  stops: string | number;\r\n  price: string | number;\r\n  currency: string;\r\n  name: string;\r\n  selected:boolean;\r\n}\r\n /**\r\n  * This is the fare Rules models\r\n  */\r\n export interface FareRules {\r\n  departureCountry: string;\r\n  arrivalCountry: string;\r\n  adtRules: fares[];\r\n  cnnRules: fares[];\r\n  infRules: fares[];\r\n}\r\nexport interface fares {\r\n  fareRule: string;\r\n  title: string;\r\n}","import { Injectable, inject } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\r\nimport { Subscription, retry, take } from 'rxjs';\r\nimport { FareRules, FlightSearchResult, SearchFlightModule, airItineraries, filterFlightInterface, flight, flightResultFilter } from '../interfaces';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { FlightResultApiService } from './flight-result-api.service';\r\nimport { searchFlightModel } from '../../flight-search/interfaces';\r\nimport { Options } from '@angular-slider/ngx-slider';\r\nimport { DatePipe } from '@angular/common';\r\nimport { customAirlineFilter } from '../interfaces'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FlightResultService {\r\n\r\n  api = inject(FlightResultApiService)\r\n  router = inject(Router)\r\n  route = inject(ActivatedRoute)\r\n  filter?: flightResultFilter;\r\n  searchID : string = ''\r\n  /**\r\n * response Data from Api  b type FlightSearchResult\r\n */\r\n  response?: FlightSearchResult\r\n  /**\r\n   * response airItineraries Data from Api  b type airItineraries\r\n   */\r\n  FilterData: airItineraries[] = []\r\n  /**\r\n     * load error message when no data back from api\r\n     */\r\n  normalError: string = ''\r\n\r\n  /**\r\n   * flight Type \r\n   */\r\n  FlightType: string = 'RoundTrip'\r\n  normalErrorStatus: boolean = false\r\n  /**\r\n  * loading state ..\r\n  */\r\n  loading: boolean = true\r\n  roundT: boolean = false;\r\n  airLR: any = []\r\n/**fare rules loading state */\r\nfareLoading: boolean = true;\r\n  ResultFound: boolean = false\r\n  /**\r\n  *  Min value price \r\n  * \r\n  */\r\n  priceMinValue: number = 0;\r\n  /**\r\n  *  Max value price \r\n  * \r\n  */\r\n  priceMaxValue: number = 5000;\r\n  FilterChanges$: Subscription = new Subscription();\r\n  /**\r\n *  optins init and return data as string \r\n * \r\n */\r\n  options: Options = {\r\n    floor: 0,\r\n    ceil: 5000,\r\n    translate: (value: number): string => {\r\n      return Math.round(value).toString();\r\n    },\r\n  };\r\n  /**\r\n * inital rate currecy code kwd\r\n * \r\n */\r\n  rate: number = 1;\r\n  code: string = \"KWD\"\r\n  /**\r\n *  array of  type string return feh kol airline back from airItineraries\r\n * \r\n */\r\n  airlinesA: string[] = [];\r\n  airlinesForm: any = [];\r\n  bookingSites: string[] = ['KhaleejGate', 'other'];\r\n  /**\r\n *  array of  type boolean\r\n * \r\n */\r\n  bookingSitesForm: boolean[] = []\r\n  /**\r\n *  inital slider for filter return feh date min and max \r\n * \r\n */\r\n  departingMin: number = 0;\r\n  departingMax: number = 7000\r\n  optionsdeparting: Options = this.options;\r\n\r\n  arrivingMin: number = 0;\r\n  arrivingMax: number = 7000\r\n  optionsArriving: Options = this.options;\r\n  minValue: number = 0\r\n  maxValue: number = 5000\r\n\r\n  durationMin: number = 0;\r\n  durationMax: number = 7000;\r\n  optionsDurathion: Options = this.options\r\n/**Property for fare Rules */\r\n  fareRules!: FareRules[];\r\n  /**\r\n  *  inital from filter\r\n  * \r\n  */\r\n  filterForm = new FormGroup({\r\n    airline: new FormGroup({\r\n      airlines: new FormArray([]),\r\n    }),\r\n    bookingSite: new FormGroup({\r\n      bookingSites: new FormArray([])\r\n    }),\r\n\r\n    stopsForm: new FormGroup({\r\n      noStops: new FormControl(false),\r\n      oneStop: new FormControl(false),\r\n      twoAndm: new FormControl(false),\r\n    }),\r\n    sameAirline: new FormControl(false),\r\n\r\n    priceSlider: new FormControl([0, 0]),\r\n    durationSlider: new FormControl([0, 0]),\r\n    dpartingSlider: new FormControl([0, 0]),\r\n    arrivingSlider: new FormControl([0, 0]),\r\n\r\n    returnSlider: new FormControl([30, 7000]),\r\n    experience: new FormGroup({\r\n      overNight: new FormControl(false),\r\n      longStops: new FormControl(false)\r\n    }),\r\n\r\n    flexibleTickets: new FormGroup({\r\n      refund: new FormControl(false),\r\n      nonRefund: new FormControl(false)\r\n    })\r\n  });\r\n\r\n  formINIT:boolean =false;\r\n\r\n  priceOptions! : Options\r\n  subscription: Subscription = new Subscription()\r\n\r\n  moreT: boolean[] = [];\r\n  /**\r\n*  array return data type airItineraries[] after organize\r\n* \r\n*/\r\n  orgnizedResponce: airItineraries[][] = [];\r\n\r\n \r\n  /**\r\n   * lowest fares for sorting containers\r\n   */\r\n  cheapeastLowestFare:number = 0\r\n  shortestLowestFare:number = 0\r\n  bestExperienceLowestFare:number = 0\r\n\r\n\r\n  /**Custom airlines filter */\r\n  customFilteredAirline : customAirlineFilter[] = [];\r\n  chosenCustomFilteredAirline : string[] = [];\r\n  customFilteredAirlineSlice:customAirlineFilter[] = [];\r\n  customFilteredAirlineStart : number = 0;\r\n  customFilteredAirlineEnd : number = 4;\r\n\r\n  customFilteredAirlineSliceMobile:customAirlineFilter[] = [];\r\n  customFilteredAirlineStartMobile : number = 0;\r\n  customFilteredAirlineEndMobile : number = 2;\r\n  constructor() { }\r\n\r\n\r\n\r\n  /**\r\n * get all data from the router to call api to get flightResultData\r\n * from Api  searchFlight\r\n **/\r\n  getDataFromUrl(lang: string, currency: string, pointOfReservation: string, flightType: string, flightsInfo: string, serachId: string, passengers: string, Cclass: string, showDirect: boolean,endCustomAirlineFilter:number,endCustomAirlineFilterMobile:number) {\r\n    this.loading = true\r\n    this.orgnizedResponce = []\r\n    this.FilterData = []\r\n    this.response = undefined\r\n    this.customFilteredAirlineEnd = endCustomAirlineFilter\r\n    this.customFilteredAirlineEndMobile = endCustomAirlineFilterMobile\r\n    this.FlightType = flightType;\r\n    this.searchID = serachId\r\n    if (this.FlightType == 'RoundTrip') {\r\n      this.roundT = true\r\n    }\r\n    let searchApi: SearchFlightModule = new SearchFlightModule(lang, currency, pointOfReservation, flightType, flightsInfo, passengers, Cclass, serachId, showDirect, 'all');\r\n    if (SearchFlightModule) {\r\n      let myapi = searchApi;\r\n\r\n      this.subscription.add(this.api.searchFlight(myapi).subscribe(\r\n        (result) => {\r\n          this.formINIT =false;\r\n          if (result.status == 'Valid') {\r\n            this.loading = false;\r\n            this.ResultFound = true;\r\n            this.response = result;\r\n            this.filterAirlines()\r\n            this.fetchLowestFaresForSorting(this.response.airItineraries)\r\n            this.FilterData = result.airItineraries;\r\n            this.orgnizedResponce = this.orgnize(this.FilterData);\r\n\r\n            this.FilterChanges$.unsubscribe();\r\n            this.filterForm = new FormGroup({\r\n              airline: new FormGroup({\r\n                airlines: new FormArray([])\r\n              }),\r\n\r\n              bookingSite: new FormGroup({\r\n                bookingSites: new FormArray([])\r\n              }),\r\n\r\n              stopsForm: new FormGroup({\r\n                noStops: new FormControl(false),\r\n                oneStop: new FormControl(false),\r\n                twoAndm: new FormControl(false)\r\n              }),\r\n              sameAirline: new FormControl(false),\r\n              priceSlider: new FormControl([0, 0]),\r\n              durationSlider: new FormControl([0, 7000]),\r\n              dpartingSlider: new FormControl([0, 20000]),\r\n              arrivingSlider: new FormControl([0, 20000]),\r\n              returnSlider: new FormControl([0, 7000]),\r\n\r\n              experience: new FormGroup({\r\n                overNight: new FormControl(false),\r\n                longStops: new FormControl(false)\r\n              }),\r\n\r\n              flexibleTickets: new FormGroup({\r\n                refund: new FormControl(false),\r\n                nonRefund: new FormControl(false)\r\n              })\r\n            });\r\n\r\n            this.findDepartingnMinMax(this.response.airItineraries);\r\n            this.filterForm.get(\"dpartingSlider\")?.setValue( this.findDepartingnMinMax(this.response.airItineraries));\r\n            this.filterForm.get(\"dpartingSlider\")?.updateValueAndValidity();\r\n            this.filterForm.get(\"durationSlider\")?.setValue(this.findDurationMinMax(this.response.airItineraries));\r\n            this.filterForm.get(\"durationSlider\")?.updateValueAndValidity();\r\n\r\n            // this.findDepartingnMinMax(this.response.airItineraries)\r\n            this.filterForm.get(\"arrivingSlider\")?.setValue(this.findArrivingMinMax(this.response.airItineraries));\r\n            this.filterForm.get(\"arrivingSlider\")?.updateValueAndValidity();            // this.minAnMax(this.response.airItineraries);\r\n            this.filterForm.get('priceSlider')?.setValue(this.minAnMax(this.response.airItineraries));\r\n            this.stopsvalues(),\r\n              this.airlinesA = this.response.airlines;\r\n            this.airlinesForm = []\r\n            this.airlinesA.forEach(element => {\r\n              (<FormArray>this.filterForm.get('airline')?.get('airlines')).push(new FormControl(false));\r\n            });\r\n\r\n            this.bookingSitesForm = []\r\n            this.bookingSites.forEach(element => {\r\n              (<FormArray>this.filterForm.get('bookingSite')?.get('bookingSites')).push(new FormControl(false));\r\n            })\r\n            this.setSliderOptions();\r\n            this.filterForm.updateValueAndValidity();\r\n            this.formINIT = true;\r\n            this.updateFilter()\r\n          }\r\n          else {\r\n            this.normalError = \"No result found. <br> please search again\"\r\n            this.normalErrorStatus = true;\r\n            this.loading = false;\r\n            this.ResultFound = false;\r\n          }\r\n\r\n\r\n        }\r\n      ));\r\n    }\r\n\r\n  }\r\n  /**\r\n * update filter input\r\n * \r\n **/\r\n  updateFilter() {\r\n  \r\n    this.subscription.add(\r\n      this.filterForm.valueChanges.subscribe((val) => {\r\n        if (this.formINIT) {\r\n          let filter: flightResultFilter = new flightResultFilter(\r\n            this.filterForm.get(\"sameAirline\")?.value!,\r\n            this.filterForm.get(\"priceSlider\")?.value![0],\r\n            this.filterForm?.get(\"priceSlider\")?.value![1],\r\n            this.filterForm.get(\"durationSlider\")?.value![0],\r\n            this.filterForm.get(\"durationSlider\")?.value![1],\r\n            this.filterForm.get(\"dpartingSlider\")?.value![0],\r\n            this.filterForm.get(\"dpartingSlider\")?.value![1],\r\n            this.filterForm.get(\"arrivingSlider\")?.value![0],\r\n            this.filterForm.get(\"arrivingSlider\")?.value![1],\r\n            this.filterForm.get(\"returnSlider\")?.value![0],\r\n            this.filterForm.get(\"returnSlider\")?.value![1],\r\n            this.stopsvalues(),\r\n            [this.filterForm.get('experience')?.get('overNight')?.value!],\r\n            [this.filterForm.get('flexibleTickets')?.get('refund')?.value!, this.filterForm.get('flexibleTickets')?.get('nonRefund')?.value!],\r\n\r\n            this.filteringbyairline(this.filterForm.get('airline')?.get('airlines')?.value!),\r\n            this.filteringbyBookingSites(this.filterForm.get('bookingSite')?.get('bookingSites')?.value!)\r\n\r\n          );\r\n        \r\n          this.oneForAll(filter, this.FilterData, this.roundT);\r\n        }\r\n        else {\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  // filter func\r\n\r\n\r\n  // new filteration method\r\n  oneForAll(filter: filterFlightInterface, fligtsArray: airItineraries[], round: boolean) {\r\n    this.orgnizedResponce = this.orgnize(fligtsArray.filter(v =>\r\n\r\n      this.filterFlighWithPrice(v, filter) &&\r\n      this.filterFlighWithDepartionTime(v, filter) &&\r\n      this.filterFlighWithArrivalTime(v, filter) &&\r\n      this.FlexTicketcheck(v, filter) &&\r\n      this.filterFlightWithNumberofStopsFunction(v, filter) &&\r\n      this.filterFlighWithDuration(v, filter) &&\r\n      this.filterWithExperience(v, filter) &&\r\n      this.filterFlighWithReturnTime(v, filter, this.roundT) &&\r\n      this.completeTripOnSameAirline(v, filter) &&\r\n      this.filterFlightWithAirlineFunction(v, filter,this.roundT)\r\n\r\n\r\n    ))\r\n\r\n  }\r\n\r\n  /**\r\n   * grouping data return two array array airItineraries and array have same price\r\n   **/\r\n\r\n  orgnize(array: airItineraries[]) {\r\n    let out :airItineraries[][]=[];\r\n    let remain:airItineraries[] =array;\r\n    let i = 0;\r\n    while (remain.length >0 || !remain) {\r\n      if (i>50){\r\n        break\r\n      }else{\r\n        out.push(remain.filter((v,i,a)=>v.allJourney.flights[0].flightDTO[0].flightAirline.airlineCode ===a[0].allJourney.flights[0].flightDTO[0].flightAirline.airlineCode && v.itinTotalFare.amount === a[0].itinTotalFare.amount));\r\n        remain = remain.filter((v,i,a)=>v.allJourney.flights[0].flightDTO[0].flightAirline.airlineCode !=a[0].allJourney.flights[0].flightDTO[0].flightAirline.airlineCode || v.itinTotalFare.amount != a[0].itinTotalFare.amount);\r\n      }\r\n      i = i +1\r\n    }\r\n    \r\n   return out\r\n  \r\n  \r\n  }\r\n  /**\r\n   * create an array with the same length of the output\r\n   **/\r\n  valuesoftrueM(array: airItineraries[]) {\r\n    let out: any[] = [];\r\n    let arryalengty = array.length;\r\n    for (let index = 0; index < arryalengty; index++) {\r\n      let truth: boolean = true;\r\n      out.push(truth);\r\n\r\n    }\r\n    return this.moreT = out;\r\n  }\r\n\r\n\r\n  /**\r\n    * \r\n    * @param type \r\n    \r\n    * sort result base on type:number return data: airItineraries[] sorting by condition or type  \r\n    * \r\n    */\r\n\r\n  sortMyResult(type: number) {\r\n    if (this.response != undefined) {\r\n      if (type == 1) {\r\n        this.orgnizedResponce = \r\n          [...this.orgnizedResponce].sort((a, b) => { return a[0].itinTotalFare.amount - b[0].itinTotalFare.amount })\r\n        \r\n      }\r\n      if (type == 2) {\r\n        this.orgnizedResponce = [...this.orgnizedResponce].sort((a, b) => { return a[0].totalDuration - b[0].totalDuration })\r\n      }\r\n      if (type == 3) {\r\n        this.orgnizedResponce = [...this.orgnizedResponce].sort((a, b) => { return <any>new Date(a[0].deptDate) - <any>new Date(b[0].deptDate) })\r\n      }\r\n      if (type == 4) {\r\n        this.orgnizedResponce = [...this.orgnizedResponce].sort((a, b) => { return <any>new Date(b[0].deptDate) - <any>new Date(a[0].deptDate) })\r\n      }\r\n      if (type == 5) {\r\n        this.orgnizedResponce = [...this.orgnizedResponce].sort((a, b) => { return <any>new Date(a[0].allJourney.flights[1].flightDTO[0].departureDate) - <any>new Date(b[0].allJourney.flights[1].flightDTO[0].departureDate) })\r\n      }\r\n\r\n      if (type == 6) {\r\n        this.orgnizedResponce = [...this.orgnizedResponce].sort((a, b) => { return <any>new Date(b[0].allJourney.flights[1].flightDTO[0].departureDate) - <any>new Date(a[0].allJourney.flights[1].flightDTO[0].departureDate) })\r\n      }\r\n\r\n      if (type == 7) {\r\n        this.orgnizedResponce = [...this.orgnizedResponce].sort((a, b) => { return a[0].experiance - b[0].experiance })\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get the lowest fares for all sorting criterias\r\n   * @param data (all the itineraries)\r\n   */\r\n  fetchLowestFaresForSorting(data:airItineraries[]){\r\n    this.cheapeastLowestFare = [...data].sort((a, b) => { return a.itinTotalFare.amount - b.itinTotalFare.amount })[0].itinTotalFare.amount\r\n    this.bestExperienceLowestFare = [...data].sort((a, b) => { return a.experiance - b.experiance })[0].itinTotalFare.amount\r\n    this.shortestLowestFare = [...data].sort((a, b) => { return a.totalDuration - b.totalDuration })[0].itinTotalFare.amount\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * get min , max value slider from back data \r\n   **/\r\n\r\n\r\n  /**\r\n  * Filter Values airItineraries[] by Price And Update Filtiration Slider\r\n  **/\r\n  minAnMax(data: airItineraries[]) {\r\n\r\n    let arr: airItineraries[] = [...data];\r\n    let sortedRes = [\r\n      ...arr.sort((a, b) => {\r\n        return a.itinTotalFare.amount - b.itinTotalFare.amount;\r\n      }),\r\n    ];\r\n\r\n    let minValue = sortedRes[0].itinTotalFare.amount;\r\n    let maxValue1 = sortedRes[sortedRes.length - 1].itinTotalFare.amount;\r\n\r\n    this.options = {\r\n      floor: minValue,\r\n      ceil: Math.round(maxValue1 + 10),\r\n      translate: (value: number): string => {\r\n        return Math.round(value).toString();\r\n      },\r\n    };\r\n    this.priceMinValue = minValue;\r\n    this.priceMaxValue = Math.round(maxValue1 + 10);\r\n    this.maxValue = Math.round(maxValue1 + 10);\r\n    return [minValue, this.maxValue]\r\n  }\r\n\r\n  /**\r\n    * Find Min And Max Values and  Filter Values airItineraries[]  Of Flight Duration  And Update Filtiration Slider\r\n    **/\r\n  findDurationMinMax(array: any[]) {\r\n    let sorted = [...array].sort((a, b) => b.totalDuration - a.totalDuration);\r\n    let min = sorted[sorted.length - 1]['totalDuration'];\r\n    let max = sorted[0]['totalDuration'];\r\n    this.durationMax = max + 100;\r\n    this.durationMin = min;\r\n    this.optionsDurathion = {\r\n      floor: min,\r\n      ceil: max + 100,\r\n      noSwitching: true,\r\n      translate: (value: number): string => {\r\n        let h = value / 60 | 0;\r\n        let m = value % 60 | 0;\r\n        return h + \"h\" + \":\" + m + \"m\";\r\n      }\r\n    }\r\n    return [min, max + 100];\r\n  }\r\n  /**\r\n   *  Find Min And Max Values Of Flight Departing Dates  And Update Filtiration Slider\r\n   **/\r\n  findDepartingnMinMax(array: airItineraries[]) {\r\n    let min = this.convertToMin(array[0].allJourney.flights[0].flightDTO[0].departureDate);\r\n    let max = this.convertToMin(array[0].allJourney.flights[0].flightDTO[0].departureDate);\r\n    array.forEach(element => {\r\n      let t = this.convertToMin(element.allJourney.flights[0].flightDTO[0].departureDate)\r\n      if (t < min) {\r\n        min = t;\r\n      }\r\n      if (t > max) {\r\n        max = t;\r\n      }\r\n    });\r\n\r\n    this.departingMin = min;\r\n    this.departingMax = max;\r\n    this.optionsdeparting = {\r\n      floor: min,\r\n      ceil: max,\r\n      noSwitching: false,\r\n      translate: (value: number): string => {\r\n        let h = value / 60 | 0;\r\n        let m = value % 60 | 0;\r\n        return h + \"h\" + \":\" + m + \"m\";\r\n        // return this.datePipe.transform(value * 1000, 'HH:mm a')\r\n      }\r\n    };\r\n    return [min, max];\r\n  }\r\n\r\n  /**\r\n*  Find Min And Max Values Of Flight arriving Dates  And Update Filtiration Slider\r\n**/\r\n\r\n  findArrivingMinMax(array: airItineraries[]) {\r\n    let min = this.convertToMin(array[0].allJourney.flights[0].flightDTO[array[0].allJourney.flights[0].flightDTO.length - 1].arrivalDate);\r\n    let max = this.convertToMin(array[0].allJourney.flights[0].flightDTO[array[0].allJourney.flights[0].flightDTO.length - 1].arrivalDate);\r\n    array.forEach(element => {\r\n      let t = this.convertToMin(element.allJourney.flights[0].flightDTO[element.allJourney.flights[0].flightDTO.length - 1].arrivalDate)\r\n      if (t < min) {\r\n        min = t;\r\n      }\r\n      if (t > max) {\r\n        max = t;\r\n      }\r\n    });\r\n\r\n    this.arrivingMin = min;\r\n    this.arrivingMax = max;\r\n    this.optionsArriving = {\r\n      floor: min,\r\n      ceil: max,\r\n      noSwitching: true,\r\n      translate: (value: number): string => {\r\n        let h = value / 60 | 0;\r\n        let m = value % 60 | 0;\r\n        return h + \"h\" + \":\" + m + \"m\";\r\n      }\r\n    };\r\n    return [min, max];\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Functions filter to filter data \r\n   **/\r\n\r\n  /**\r\n *  take date string return number\r\n **/\r\n  convertToMin(time: string): number {\r\n    let date = time;\r\n    let T = date.indexOf('T');\r\n    let h = date.slice(T + 1);\r\n    let hr = +h.slice(0, 2) * 60;\r\n    let m = +h.slice(3, 5);\r\n    let tm = hr + m;\r\n    return tm\r\n  }\r\n  /**\r\n *  filter by price value\r\n **/\r\n  filterFlighWithPrice(flight: airItineraries, filter: filterFlightInterface): boolean {\r\n    return flight.itinTotalFare.amount >= filter.priceMin! && flight.itinTotalFare.amount < filter.priceMax!;\r\n  }\r\n  /**\r\n*  filter by DepartingTime\r\n**/\r\n  filterFlighWithDepartionTime(flight: airItineraries, filter: filterFlightInterface): boolean {\r\n    return this.convertToMin(flight.allJourney.flights[0].flightDTO[0].departureDate) >= filter.depatingMin! && this.convertToMin(flight.allJourney.flights[0].flightDTO[0].departureDate) <= filter.departingMax!;\r\n\r\n  }\r\n  /**\r\n*  filter by ArrivalTime\r\n**/\r\n  filterFlighWithArrivalTime(flight: airItineraries, filter: filterFlightInterface): boolean {\r\n    return this.convertToMin(flight.allJourney.flights[0].flightDTO[flight.allJourney.flights[0].flightDTO.length - 1].arrivalDate) >= filter.arrivingMin! && this.convertToMin(flight.allJourney.flights[0].flightDTO[flight.allJourney.flights[0].flightDTO.length - 1].arrivalDate) <= filter.arrivingMax!;\r\n\r\n  }\r\n  /**\r\n *  filter by Duration flight\r\n **/\r\n  filterFlighWithDuration(flight: airItineraries, filter: filterFlightInterface): boolean {\r\n    return flight.totalDuration >= filter.durationMin! && flight.totalDuration < filter.durationMax!;\r\n  }\r\n  /**\r\n*  filter by stops value\r\n**/\r\n\r\n  stopsvalues() {\r\n    let out: number[] = [];\r\n    if (this.filterForm.get('stopsForm')?.get('noStops')?.value) {\r\n      out.push(0)\r\n    }\r\n    if (this.filterForm.get('stopsForm')?.get('oneStop')?.value) {\r\n      out.push(1)\r\n    }\r\n    if (this.filterForm.get('stopsForm')?.get('twoAndm')?.value) {\r\n      out.push(2);\r\n      out.push(3);\r\n      out.push(4);\r\n    }\r\n\r\n    if (!this.filterForm.get('stopsForm')?.get('noStops')?.value && !this.filterForm.get('stopsForm')?.get('oneStop')?.value && !this.filterForm.get('stopsForm')?.get('twoAndm')?.value) {\r\n      out = [0, 1, 2, 3, 4];\r\n    }\r\n\r\n    return out\r\n  }\r\n  /**\r\n*  filter by stops value\r\n**/\r\n  filterFlightWithNumberofStopsFunction(flight: airItineraries, filter: filterFlightInterface): boolean {\r\n    let stopFlage: boolean = true;\r\n    if(filter.stops![0] == 0 && filter.stops![1] == 1 && filter.stops![2] == 2 && filter.stops![3] == 3 && filter.stops![4] == 4){\r\n      stopFlage = true\r\n    }\r\n    else if (filter?.stops![0] == 0 && filter.stops?.length! == 1) {\r\n      for (var i = 0; i < flight.allJourney.flights.length; i++) {\r\n        if (flight.allJourney.flights[i].stopsNum != 0) {\r\n          stopFlage = false\r\n        }\r\n      }\r\n    }\r\n\r\n    else if (filter.stops![0] == 0 && filter.stops![1] == 1) {\r\n      for (var i = 0; i < flight.allJourney.flights.length; i++) {\r\n        if (flight.allJourney.flights[i].stopsNum > 1) {\r\n          stopFlage = false\r\n        }\r\n      }\r\n    }\r\n\r\n    else if (filter.stops![0] == 0 && filter.stops![1] == 2) {\r\n      for (var i = 0; i < flight.allJourney.flights.length; i++) {\r\n        if (flight.allJourney.flights[i].stopsNum == 1) {\r\n          stopFlage = false\r\n        }\r\n      }\r\n    }\r\n\r\n    else if (filter.stops![0] == 1 && filter.stops?.length == 1) {\r\n      for (var i = 0; i < flight.allJourney.flights.length; i++) {\r\n        if (flight.allJourney.flights[i].stopsNum != 1) {\r\n          stopFlage = false\r\n        }\r\n      }\r\n    }\r\n\r\n    else if(filter.stops![0] == 1 && filter.stops![1] == 2){\r\n      for (var i = 0; i < flight.allJourney.flights.length; i++) {\r\n        if (flight.allJourney.flights[i].stopsNum < 2 && flight.allJourney.flights[i].stopsNum != 1) {\r\n          stopFlage = false\r\n        }\r\n      }\r\n    }\r\n\r\n    else if (filter.stops![0] == 2) {\r\n      for (var i = 0; i < flight.allJourney.flights.length; i++) {\r\n        if (flight.allJourney.flights[i].stopsNum < 2) {\r\n          stopFlage = false\r\n        }\r\n      }\r\n    }\r\n\r\n    else {\r\n      stopFlage = true\r\n    }\r\n\r\n\r\n    return stopFlage\r\n  }\r\n\r\n  /**\r\n  *  filter by airline\r\n  **/\r\n\r\n\r\n\r\n  filteringbyairline(val: any[]) {\r\n    let airL: any[] = [];\r\n    for (let index = 0; index < val.length; index++) {\r\n      const element = val[index];\r\n      if (element) {\r\n        \r\n        airL.push(this.airlinesA[index]);\r\n      }\r\n\r\n    };\r\n    if (airL.length == 0) {\r\n      let out = airL;\r\n      this.airLR = out\r\n      return out\r\n    }\r\n    else {\r\n      return airL;\r\n    }\r\n  }\r\n  filterFlightWithAirlineFunction(flight: airItineraries, filter: filterFlightInterface,roundT:boolean): boolean {\r\n    if(roundT){\r\n      return filter.airlines!.indexOf(flight.allJourney.flights[0]['flightAirline']['airlineName']) != -1 || filter.airlines!.indexOf(flight.allJourney.flights[1]['flightAirline']['airlineName']) != -1  || filter.airlines?.length == 0\r\n    }else{\r\n      return filter.airlines!.indexOf(flight.allJourney.flights[0]['flightAirline']['airlineName']) != -1 || filter.airlines?.length == 0\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n *  filter by ReturnTime\r\n **/\r\n\r\n  filterFlighWithReturnTime(flight: airItineraries, filter: filterFlightInterface, roundT: boolean): boolean {\r\n    roundT = this.roundT\r\n    if(roundT){\r\n      return this.convertToMin(flight.allJourney.flights[1].flightDTO[0].departureDate) >= filter.returnMin! && this.convertToMin(flight.allJourney.flights[1].flightDTO[0].departureDate) < filter.returnMax!;\r\n    }else{\r\n      return true\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  /**\r\n *  filter by booking sites\r\n **/\r\n\r\n\r\n  filteringbyBookingSites(val: string[]) {\r\n    let selectedSites: any[] = [];\r\n    for (let index = 0; index < val.length; index++) {\r\n      const element = val[index];\r\n      if (element) {\r\n        selectedSites.push(this.bookingSites[index]);\r\n      }\r\n\r\n    };\r\n    if (selectedSites.length == 0) {\r\n      let out = selectedSites;\r\n      return out\r\n    }\r\n    else {\r\n      return selectedSites;\r\n    }\r\n  }\r\n\r\n  /**\r\n  * check value stop \r\n  **/\r\n  stopscheck(stops: number[], flight: flight[]) {\r\n    let status: Boolean = true;\r\n    let t1 = performance.now();\r\n    flight.forEach(element => {\r\n      if (stops.indexOf(element.stopsNum) == -1) {\r\n        status = false;\r\n      }\r\n\r\n    });\r\n    return status\r\n  }\r\n  /**\r\n  * check FlextTicket \r\n  **/\r\n  FlexTicketcheck(flight: airItineraries, filter: filterFlightInterface): boolean {\r\n    if (filter.flexibleTicket![0] && !filter.flexibleTicket![1]) {\r\n      if (flight.isRefundable) {\r\n        return true\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n    }\r\n\r\n    else if (!filter.flexibleTicket![0] && filter.flexibleTicket![1]) {\r\n      if (flight.isRefundable) {\r\n        return false\r\n      }\r\n      else {\r\n        return true\r\n      }\r\n    }\r\n\r\n    else if (!filter.flexibleTicket![0] && !filter.flexibleTicket![1]) {\r\n      return true\r\n    }\r\n\r\n    else if (filter.flexibleTicket![0] && filter.flexibleTicket![1]) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  /**\r\n  * filter data based on  experience value \r\n  **/\r\n  filterWithExperience(flight: airItineraries, filter: filterFlightInterface): boolean {\r\n    if (filter.experience![0] && !filter.experience![1]) {\r\n      if (flight.overNight == 0) {\r\n        return true\r\n      }\r\n      else { return false }\r\n    }\r\n\r\n    else if (filter.experience![1] && !filter.experience![0]) {\r\n      if (flight?.stopsTime! < 4) {\r\n        return true\r\n      }\r\n      else { return false }\r\n    }\r\n\r\n    else if (filter.experience![1] && filter.experience![0]) {\r\n      if (flight.overNight == 0 && flight.stopsTime! < 4) {\r\n        return true\r\n      }\r\n      else { return false }\r\n    }\r\n\r\n    else if (!filter.experience![1] && !filter.experience![0]) {\r\n      return true\r\n    }\r\n    else {\r\n      return false\r\n    }\r\n  }\r\n  /**\r\n  * filter data based on  SameAirline  \r\n  **/\r\n  completeTripOnSameAirline(flight: airItineraries, filter: filterFlightInterface): boolean {\r\n    if (!filter.sameAirline) {\r\n      return true\r\n    }\r\n    else {\r\n      let airlineChange = true\r\n      let firstAirline = flight.allJourney.flights[0].flightDTO[0].flightAirline.airlineName\r\n\r\n      let flightAirlines: string[][]\r\n      flightAirlines = flight.allJourney.flights.map(v => {\r\n        return v.flightDTO.map(f => {\r\n          return f.flightAirline.airlineName\r\n        })\r\n      })\r\n\r\n      for (var i = 0; i < flightAirlines.length; i++) {\r\n        for (var j = 0; j < flightAirlines[i].length; j++) {\r\n          if (flightAirlines[i][j] != firstAirline) {\r\n            airlineChange = false;\r\n          }\r\n        }\r\n      }\r\n      return airlineChange;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * after finding the min and max values for all filtiration critirias .. update the sliders with these ,,\r\n   * minimum and maximum values\r\n   */\r\n  setSliderOptions(){\r\n    this.optionsDurathion={\r\n      floor: this.durationMin,\r\n      ceil: this.durationMax,\r\n      noSwitching: true,\r\n      translate: (value: number): string => {\r\n        let h = value / 60 | 0;\r\n        let m = value % 60 | 0;\r\n        return h + \"h\" + \":\" + m + \"m\";\r\n      }\r\n    }\r\n\r\n  this.optionsdeparting = {\r\n    floor: this.departingMin,\r\n    ceil: this.departingMax,\r\n    noSwitching: false,\r\n    translate: (value: number): string => {\r\n      let h = value / 60 | 0;\r\n      let m = value % 60 | 0;\r\n      \r\n      return `${this.hoursFormater(h)}:${this.mFormater(m)} ${this.DayOrNight(h,m)}`;\r\n    }\r\n  };\r\n\r\n    this.optionsArriving = {\r\n      floor: this.arrivingMin,\r\n      ceil: this.arrivingMax,\r\n      noSwitching: true,\r\n      translate: (value: number): string => {\r\n        let h = value / 60 | 0;\r\n        let m = value % 60 | 0;\r\n        return `${this.hoursFormater(h)}:${this.mFormater(m)} ${this.DayOrNight(h,m)}`;\r\n      }\r\n    };\r\n\r\n  this.options = {\r\n    floor: this.priceMinValue,\r\n    ceil: Math.round(this.priceMaxValue + 1),\r\n    minLimit:Math.round(this.priceMinValue),\r\n    maxLimit:Math.round(this.priceMaxValue+1),\r\n    translate: (value: number): string => {\r\n      return this.code + Math.round(value*this.rate);\r\n    }\r\n  };\r\n  }\r\n\r\nupdateCurrencyCode(code: string){\r\n  this.code = code;\r\n}\r\n  DayOrNight(h:number,m:number):string{\r\n    let hourOfday = h > 24?h%24:h;\r\n   return hourOfday+(m/100) > 12?'PM':\"AM\"\r\n  }\r\n  hoursFormater(h:number):string{\r\n    let hourOfday = h > 24?h%24:h;\r\n    let fHourOfday  = hourOfday >12? hourOfday -12 : hourOfday;\r\n  \r\n    return fHourOfday >= 10 ?fHourOfday.toString():`0${fHourOfday}`;\r\n  }\r\n  mFormater(m:number):string{\r\n  return m >=10?m.toString():`0${m}`;\r\n  }\r\n\r\n\r\n  /**\r\n   **Sort according to the lowest fare (amount) and then create airlines array\r\n   **according to the sorting to use them in filtiration\r\n   **/\r\n   filterAirlines() {\r\n    this.customFilteredAirline = [];\r\n    this.customFilteredAirlineSlice = [];\r\n    this.customFilteredAirlineSliceMobile = [];\r\n    if (!this.response) {\r\n      return;\r\n    }\r\n    let sorted = this.response.airItineraries.slice().sort((a, b) => {\r\n      return a.itinTotalFare.amount - b.itinTotalFare.amount;\r\n    });\r\n    for (var i = 0; i < this.response.airlines.length; i++) {\r\n      let airlineNow = this.response.airlines[i];\r\n      let index = sorted.findIndex(\r\n        (air) =>\r\n          air.allJourney.flights[0].flightAirline.airlineName == airlineNow\r\n      );\r\n      if (index != -1) {\r\n        var maxStops = sorted[index].allJourney.flights.slice().sort((a, b) => {\r\n          return b.stopsNum - a.stopsNum;\r\n        });\r\n        this.customFilteredAirline.push({\r\n          logo: sorted[index].allJourney.flights[0].flightAirline.airlineLogo,\r\n          stops: maxStops[0].stopsNum,\r\n          price: sorted[index].itinTotalFare.amount,\r\n          currency: sorted[index].itinTotalFare.currencyCode,\r\n          name: sorted[index].allJourney.flights[0].flightAirline.airlineName,\r\n          selected:false\r\n        });\r\n      }\r\n    }\r\n    // this.code = sorted[0].itinTotalFare.currencyCode\r\n    this.customFilteredAirlineSlice = this.customFilteredAirline.slice(this.customFilteredAirlineStart,this.customFilteredAirlineEnd)\r\n    this.customFilteredAirlineSliceMobile = this.customFilteredAirline.slice(this.customFilteredAirlineStartMobile,this.customFilteredAirlineEndMobile)\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * navigate next on custom filter airline data\r\n   * @returns \r\n   */\r\n  nextcustomFilteredAirline(){\r\n    if(this.customFilteredAirlineEnd == this.customFilteredAirline.length){\r\n      return\r\n    }\r\n    else{\r\n      this.customFilteredAirlineStart +=1;\r\n      this.customFilteredAirlineEnd +=1;\r\n      this.customFilteredAirlineSlice = this.customFilteredAirline.slice(this.customFilteredAirlineStart,this.customFilteredAirlineEnd)\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * navigate previous on custom filter airline data\r\n   * @returns \r\n   */\r\n  prevcustomFilteredAirline(){\r\n    if(this.customFilteredAirlineStart == 0){\r\n      return\r\n    }\r\n    else{\r\n      this.customFilteredAirlineStart -=1;\r\n      this.customFilteredAirlineEnd -=1;\r\n      this.customFilteredAirlineSlice = this.customFilteredAirline.slice(this.customFilteredAirlineStart,this.customFilteredAirlineEnd)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * navigate next on custom mobile filter airline data\r\n   * @returns \r\n   */\r\n  nextcustomFilteredAirlineMobile(){\r\n    if(this.customFilteredAirlineEndMobile == this.customFilteredAirline.length){\r\n      return\r\n    }\r\n    else{\r\n      this.customFilteredAirlineStartMobile +=1;\r\n      this.customFilteredAirlineEndMobile +=1;\r\n      this.customFilteredAirlineSliceMobile = this.customFilteredAirline.slice(this.customFilteredAirlineStartMobile,this.customFilteredAirlineEndMobile)\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * navigate previous on custom mobile filter airline data\r\n   * @returns \r\n   */\r\n  prevcustomFilteredAirlineMobile(){\r\n    if(this.customFilteredAirlineStartMobile == 0){\r\n      return\r\n    }\r\n    else{\r\n      this.customFilteredAirlineStartMobile -=1;\r\n      this.customFilteredAirlineEndMobile -=1;\r\n      this.customFilteredAirlineSliceMobile = this.customFilteredAirline.slice(this.customFilteredAirlineStartMobile,this.customFilteredAirlineEndMobile)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Choose From The Sorted Lowest Fare Airline To Filter With And Change The Form\r\n   **/\r\n  chooseCustomFilterAirline(val: customAirlineFilter, index: number) {\r\n    var indexForForm = this.customFilteredAirline.findIndex(\r\n      a=> a.name == val.name\r\n    );\r\n    var airlineIndex = this.chosenCustomFilteredAirline.findIndex(\r\n      (name: string) => name == val.name\r\n    );\r\n    if (airlineIndex == -1) {\r\n      (this.filterForm.get(\"airline\")!.get(\"airlines\") as FormArray)\r\n        .at(indexForForm)\r\n        .setValue(true);\r\n        this.chosenCustomFilteredAirline.push(val.name)\r\n    } else {\r\n      (this.filterForm.get(\"airline\")!.get(\"airlines\") as FormArray)\r\n        .at(indexForForm)\r\n        .setValue(false);\r\n        this.chosenCustomFilteredAirline.splice(airlineIndex,1)\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Check If The Airline Is Selected Or Not\r\n   **/\r\n  checkCustomFilterAirline(airlineName: string) {\r\n    var airlineIndex = this.chosenCustomFilteredAirline.findIndex(\r\n      (name: string) => name == airlineName\r\n    );\r\n    if (airlineIndex == -1) {\r\n\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n/** A method to get the fare rules data */\r\n  showFareRules(searchId:string,squencNumber: number, pKey: string) {\r\n\r\n    this.fareLoading=true;\r\n    this.api.fareRules(searchId, squencNumber, pKey).subscribe(\r\n      (result) => {\r\n        this.fareLoading=false;\r\n        this.fareRules = result.fares;\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * this function is responsible to destory any opened subscription on this service\r\n   */\r\n  destroyer() {\r\n    // this.subscription.unsubscribe()\r\n    this.response =undefined\r\n    this.FilterData = []\r\n    this.normalError = ''\r\n    this.FlightType = 'RoundTrip'\r\n    this.normalErrorStatus = false\r\n    this.loading = true\r\n    this.roundT = false;\r\n    this.airLR = []\r\n\r\n    this.ResultFound = false\r\n    this.priceMinValue = 0;\r\n    this.priceMaxValue = 5000;\r\n    this.FilterChanges$ = new Subscription();\r\n    this.options = {\r\n      floor: 0,\r\n      ceil: 5000,\r\n      translate: (value: number): string => {\r\n        return Math.round(value).toString();\r\n      },\r\n    };\r\n    this.rate = 1;\r\n    this.code = \"KWD\"\r\n    this.airlinesA = [];\r\n    this.airlinesForm = [];\r\n    this.bookingSites = ['KhaleejGate', 'other'];\r\n    this.bookingSitesForm = []\r\n    this.departingMin = 0;\r\n    this.departingMax = 7000\r\n    this.optionsdeparting = this.options;\r\n\r\n    this.arrivingMin = 0;\r\n    this.arrivingMax = 7000\r\n    this.optionsArriving = this.options;\r\n    this.minValue = 0\r\n    this.maxValue = 5000\r\n\r\n    this.durationMin = 0;\r\n    this.durationMax = 7000;\r\n    this.optionsDurathion = this.options\r\n    this.filterForm = new FormGroup({\r\n      airline: new FormGroup({\r\n        airlines: new FormArray([]),\r\n      }),\r\n      bookingSite: new FormGroup({\r\n        bookingSites: new FormArray([])\r\n      }),\r\n\r\n      stopsForm: new FormGroup({\r\n        noStops: new FormControl(false),\r\n        oneStop: new FormControl(false),\r\n        twoAndm: new FormControl(false),\r\n      }),\r\n      sameAirline: new FormControl(false),\r\n\r\n      priceSlider: new FormControl([0, 0]),\r\n      durationSlider: new FormControl([0, 0]),\r\n      dpartingSlider: new FormControl([0, 0]),\r\n      arrivingSlider: new FormControl([0, 0]),\r\n\r\n      returnSlider: new FormControl([30, 7000]),\r\n      experience: new FormGroup({\r\n        overNight: new FormControl(false),\r\n        longStops: new FormControl(false)\r\n      }),\r\n\r\n      flexibleTickets: new FormGroup({\r\n        refund: new FormControl(false),\r\n        nonRefund: new FormControl(false)\r\n      })\r\n    });\r\n\r\n    this.formINIT =false;\r\n\r\n    this.priceOptions = this.options\r\n    this.subscription = new Subscription()\r\n\r\n    this.moreT = [];\r\n    this.orgnizedResponce = [];\r\n    this.cheapeastLowestFare = 0\r\n    this.shortestLowestFare = 0\r\n    this.bestExperienceLowestFare = 0\r\n\r\n\r\n    /**Custom airlines filter */\r\n    this.customFilteredAirline = [];\r\n    this.chosenCustomFilteredAirline  = [];\r\n    this.customFilteredAirlineSlice = [];\r\n    this.customFilteredAirlineStart  = 0;\r\n    this.customFilteredAirlineEnd = 5;\r\n\r\n    this.customFilteredAirlineSliceMobile = [];\r\n    this.customFilteredAirlineStartMobile = 0;\r\n    this.customFilteredAirlineEndMobile  = 2;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { EnvironmentService } from '../../shared/services/environment.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FlightSearchApiService {\r\n  public http = inject(HttpClient);\r\n  public env = inject(EnvironmentService);\r\n\r\n  constructor() {}\r\n\r\n}\r\n","import { Inject, Injectable, inject } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n  searchBoxFlights,\r\n  searchBoxModel,\r\n  searchBoxPassengers,\r\n  searchFlightModel,\r\n} from '../interfaces';\r\nimport { AlertMsgModel } from '../../shared/interfaces';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FlightSearchService {\r\n  subscription: Subscription = new Subscription();\r\n\r\n  //#region Variablses\r\n  searchFlight: FormGroup = new FormGroup({});\r\n  localForm?: searchBoxModel | undefined; //used to get previous searchbox data from local storage\r\n  flightType?: string; //used to save value of flight type from paramter of initSearchForm function\r\n  passengers?: searchBoxPassengers;\r\n  lastFlight?: searchBoxFlights;\r\n  resultLink?: searchFlightModel;\r\n  passengerAlert: AlertMsgModel = {\r\n    arMsg: '',\r\n    enMsg: '',\r\n  };\r\n  flightAlert: AlertMsgModel = {\r\n    arMsg: '',\r\n    enMsg: '',\r\n  };\r\n  removeFlightAlert: AlertMsgModel = {\r\n    arMsg: '',\r\n    enMsg: '',\r\n  };\r\n  dateAlert: AlertMsgModel = {\r\n    arMsg: '',\r\n    enMsg: '',\r\n  };\r\n  retDateAlert: AlertMsgModel = {\r\n    arMsg: '',\r\n    enMsg: '',\r\n  };\r\n  validMultiDateAlert: AlertMsgModel = {\r\n    arMsg: '',\r\n    enMsg: '',\r\n  };\r\n  //#endregion\r\n\r\n  constructor(private datePipe: DatePipe) {}\r\n  /**\r\n   * this function is responsible to fill the searchbox form from local storage if it has a previous data\r\n   */\r\n  initSearchForm(form:searchBoxModel) {\r\n    if (form) {\r\n      this.flightType = form.flightType;\r\n      //get the flight type based\r\n      if (this.flightType == 'OneWay' || this.flightType == 'oneway' || this.flightType == 'oneWay') {\r\n        this.oneWayData(form);\r\n      }\r\n       else if (\r\n        this.flightType == 'RoundTrip' ||\r\n        this.flightType == 'roundTrip' ||\r\n        this.flightType == 'roundtrip'\r\n      ) {\r\n        this.roundTripData(form);\r\n      }\r\n      else if(this.flightType == 'MultiCity' ||\r\n      this.flightType == 'multiCity' ||\r\n      this.flightType == 'multicity') {\r\n        this.multiData(form);\r\n      }\r\n    }\r\n    //no values on local storage \r\n    else {\r\n      this.searchFlight = new FormGroup({\r\n        flightType: new FormControl('RoundTrip', [Validators.required]),\r\n        Direct: new FormControl(false, [Validators.required]),\r\n        Flights: new FormArray([], [Validators.required]),\r\n        returnDate: new FormControl(''),\r\n        passengers: new FormGroup(\r\n          {\r\n            adults: new FormControl(1, [\r\n              Validators.required,\r\n              Validators.min(1),\r\n            ]),\r\n            child: new FormControl(0, [Validators.required, Validators.min(0)]),\r\n            infant: new FormControl(0, [\r\n              Validators.required,\r\n              Validators.max(4),\r\n              Validators.min(0),\r\n            ]),\r\n          },\r\n          []\r\n        ),\r\n        class: new FormControl('Economy', [Validators.required]),\r\n      });\r\n      //Intialize Empty Flight\r\n      (<FormArray>this.searchFlight.get('Flights')).push(\r\n        new FormGroup({\r\n          departing: new FormControl('', [\r\n            Validators.required,\r\n          ]),\r\n          landing: new FormControl('', [\r\n            Validators.required,\r\n          ]),\r\n          departingD: new FormControl('', [\r\n            Validators.required,\r\n          ]),\r\n        })\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   * this function is responsible to fill the oneway searchbox data from data storage\r\n   */\r\n  oneWayData(localForm: searchBoxModel) {\r\n    //fill the form with data from local storage\r\n    this.searchFlight = new FormGroup({\r\n      flightType: new FormControl(localForm['flightType'], [\r\n        Validators.required,\r\n      ]),\r\n      Direct: new FormControl(localForm['Direct'], [Validators.required]),\r\n      Flights: new FormArray([], [Validators.required]),\r\n      returnDate: new FormControl(''),\r\n      passengers: new FormGroup(\r\n        {\r\n          adults: new FormControl(localForm['passengers']['adults'], [\r\n            Validators.required,\r\n            Validators.min(1),\r\n          ]),\r\n          child: new FormControl(localForm['passengers']['child'], [\r\n            Validators.required,\r\n            Validators.min(0),\r\n          ]),\r\n          infant: new FormControl(localForm['passengers']['infant'], [\r\n            Validators.required,\r\n            Validators.min(0),\r\n          ]),\r\n        },\r\n        []\r\n      ),\r\n      class: new FormControl(localForm['class'], [Validators.required]),\r\n    });\r\n    //push the first Flight to the flights form array\r\n    (<FormArray>this.searchFlight.get('Flights')).push(\r\n      new FormGroup({\r\n        departing: new FormControl(localForm.Flights[0].departing, [\r\n          Validators.required,\r\n        ]),\r\n        landing: new FormControl(localForm.Flights[0].landing, [\r\n          Validators.required,\r\n        ]),\r\n        departingD: new FormControl(localForm.Flights[0].departingD, [\r\n          Validators.required,\r\n        ]),\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * this function is responsible to fill the roundTrip searchbox data from data storage\r\n   */\r\n  roundTripData(localForm: any) {\r\n    //fill the form with data from local storage\r\n    this.searchFlight = new FormGroup({\r\n      flightType: new FormControl(localForm['flightType'], [\r\n        Validators.required,\r\n      ]),\r\n      Direct: new FormControl(localForm['Direct'], [Validators.required]),\r\n      Flights: new FormArray([], [Validators.required]),\r\n      returnDate: new FormControl(localForm['returnDate'], [\r\n        Validators.required,\r\n      ]),\r\n      passengers: new FormGroup(\r\n        {\r\n          adults: new FormControl(localForm['passengers']['adults'], [\r\n            Validators.required,\r\n            Validators.min(1),\r\n          ]),\r\n          child: new FormControl(localForm['passengers']['child'], [\r\n            Validators.required,\r\n            Validators.min(0),\r\n          ]),\r\n          infant: new FormControl(localForm['passengers']['infant'], [\r\n            Validators.required,\r\n            Validators.min(0),\r\n          ]),\r\n        },\r\n        []\r\n      ),\r\n      class: new FormControl(localForm['class'], [Validators.required]),\r\n    });\r\n    //push the first Flight to the flights form array\r\n    (<FormArray>this.searchFlight.get('Flights')).push(\r\n      new FormGroup({\r\n        departing: new FormControl(localForm.Flights[0].departing, [\r\n          Validators.required,\r\n        ]),\r\n        landing: new FormControl(localForm.Flights[0].landing, [\r\n          Validators.required,\r\n        ]),\r\n        departingD: new FormControl(localForm.Flights[0].departingD, [\r\n          Validators.required,\r\n        ]),\r\n      })\r\n    );\r\n    //change between depart and land cities and pushing it to flights array\r\n    (<FormArray>this.searchFlight.get('Flights')).push(\r\n      new FormGroup({\r\n        departing: new FormControl(localForm.Flights[0].landing, [\r\n          Validators.required,\r\n        ]),\r\n        landing: new FormControl(localForm.Flights[0].departing, [\r\n          Validators.required,\r\n        ]),\r\n        departingD: new FormControl(localForm.returnDate,[\r\n          Validators.required,\r\n        ]),\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * this function is responsible to fill the Multi City searchbox data from data storage\r\n   */\r\n  multiData(localForm: any) {\r\n    this.searchFlight = new FormGroup({\r\n      flightType: new FormControl(localForm['flightType'], [\r\n        Validators.required,\r\n      ]),\r\n      Direct: new FormControl(localForm['Direct'], [Validators.required]),\r\n      Flights: new FormArray([], [Validators.required]),\r\n      returnDate: new FormControl(''),\r\n      passengers: new FormGroup(\r\n        {\r\n          adults: new FormControl(localForm['passengers']['adults'], [\r\n            Validators.required,\r\n            Validators.min(1),\r\n          ]),\r\n          child: new FormControl(localForm['passengers']['child'], [\r\n            Validators.required,\r\n            Validators.min(0),\r\n          ]),\r\n          infant: new FormControl(localForm['passengers']['infant'], [\r\n            Validators.required,\r\n            Validators.min(0),\r\n          ]),\r\n        },\r\n        []\r\n      ),\r\n      class: new FormControl(localForm['class'], [Validators.required]),\r\n    });\r\n    //push all my flights to flights form array\r\n    for (let i = 0; i < localForm.Flights?.length; i++) {\r\n      (<FormArray>this.searchFlight.get('Flights')).push(\r\n        new FormGroup({\r\n          departing: new FormControl(localForm.Flights[i].departing, [\r\n            Validators.required,\r\n          ]),\r\n          landing: new FormControl(localForm.Flights[i].landing, [\r\n            Validators.required,\r\n          ]),\r\n          departingD: new FormControl(localForm.Flights[i].departingD, [\r\n            Validators.required,\r\n          ]),\r\n        })\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   * this function is responsible to update the flight Type\r\n   * @param flightType (oneWay or roundTrip or multiCity)\r\n   */\r\n  changeFlightType(flightType: string) {\r\n    this.searchFlight.controls['flightType'].setValue(flightType);\r\n  }\r\n  /**\r\n   * this function is responsible to get flights form array\r\n   */\r\n  public get flightsArray(): FormArray {\r\n    return this.searchFlight?.get('Flights') as FormArray;\r\n  }\r\n  /**\r\n   * this function is responsible to add flight at multi city\r\n   * @return object of string error message (flightAlert)\r\n   */\r\n  addFlight() {\r\n    let len = this.flightsArray.length;\r\n    if (len >= 4) {\r\n      this.flightAlert.enMsg = \"Maximum Flights Shouldn't be more than 4\";\r\n      this.flightAlert.arMsg = 'يجب ألا يزيد الحد الأقصى لعدد الرحلات عن 4';\r\n      return this.flightAlert;\r\n    } else {\r\n      if (len > 1) {\r\n        this.lastFlight = (<FormArray>this.searchFlight.get('Flights')).value[\r\n          len - 1\r\n        ]['landing'];\r\n      }\r\n      (<FormArray>this.searchFlight.get('Flights')).push(\r\n        new FormGroup({\r\n          departing: new FormControl(this.lastFlight, [Validators.required]),\r\n          landing: new FormControl('', [Validators.required]),\r\n          departingD: new FormControl('', [Validators.required]),\r\n        })\r\n      );\r\n      return this.flightAlert;\r\n    }\r\n  }\r\n  /**\r\n   * this function is responsible to remove flight from multi city\r\n   * @return object of string error message (removeFlightAlert)\r\n   */\r\n  removeFlight() {\r\n    let len = this.flightsArray.length;\r\n    if (len > 1) {\r\n      (<FormArray>this.searchFlight.get('Flights')).removeAt(len-1);\r\n      return this.removeFlightAlert;\r\n    } else {\r\n      this.removeFlightAlert.enMsg = \"You Don't have any flights to remove\";\r\n      this.removeFlightAlert.arMsg = 'ليس لديك أي رحلات لإزالتها';\r\n      return this.removeFlightAlert;\r\n    }\r\n  }\r\n  /**\r\n   * this function is responsible to get Total Number of passengers\r\n   * @return object of string error message (passengerAlert)\r\n   * if message is empty then the validation is true\r\n   */\r\n  getTotalPassengers(adult: number, child: number, infant: number) {\r\n    return adult + child + infant;\r\n  }\r\n  /**\r\n   * this function is responsible to change Value Of Adult passenger\r\n   * @return object of string error message (passengerAlert)\r\n   */\r\n  changeAdultPassenger(num: number) {\r\n    this.passengerAlert.arMsg = '';\r\n    this.passengerAlert.enMsg = '';\r\n    //get total number of passenger with new selected adult value\r\n    let Total = this.getTotalPassengers(\r\n      num,\r\n      this.searchFlight?.get('passengers.child')?.value,\r\n      this.searchFlight?.get('passengers.infant')?.value\r\n    );\r\n    if (num <= 9 && num != 0 && Total <= 9) {\r\n      this.searchFlight?.get('passengers.adults')?.setValue(num);\r\n      this.passengerAlert.arMsg = '';\r\n      this.passengerAlert.enMsg = '';\r\n      return this.passengerAlert;\r\n    } else {\r\n      this.passengerAlert.enMsg =\r\n        'You Should Have at least 1 Adult Passenger and maximum number Of passenger Is 9';\r\n      this.passengerAlert.arMsg =\r\n        'يجب أن يكون لديك راكب بالغ واحد على الأقل وأن لا يزيد عدد الركاب عن 9';\r\n      return this.passengerAlert;\r\n    }\r\n  }\r\n  /**\r\n   * this function is responsible to change Value Of child passenger\r\n   * @return object of string error message (passengerAlert)\r\n   * if message is empty then the validation is true\r\n   */\r\n  changeChildPassenger(num: number) {\r\n    this.passengerAlert.arMsg = '';\r\n      this.passengerAlert.enMsg = '';\r\n    //get total number of passenger with new selected child value\r\n    let Total = this.getTotalPassengers(\r\n      this.searchFlight?.get('passengers.adults')?.value,\r\n      num,\r\n      this.searchFlight?.get('passengers.infant')?.value\r\n    );\r\n    if (num <= 9 && Total <= 9) {\r\n      this.searchFlight?.get('passengers.child')?.setValue(num);\r\n      this.passengerAlert.arMsg = '';\r\n      this.passengerAlert.enMsg = '';\r\n      return this.passengerAlert;\r\n    } else {\r\n      this.passengerAlert.enMsg = 'maximum number Of passenger Should Be 9';\r\n      this.passengerAlert.arMsg = 'يجب أن يكون الحد الأقصى لعدد الركاب 9';\r\n      return this.passengerAlert;\r\n    }\r\n  }\r\n  /**\r\n   * this function is responsible to change Value Of infant passenger\r\n   * @return object of string error message (passengerAlert)\r\n   * if message is empty then the validation is true\r\n   */\r\n  changeinfantPassenger(num: number) {\r\n    this.passengerAlert.arMsg = '';\r\n      this.passengerAlert.enMsg = '';\r\n    let adultVal = this.searchFlight?.get('passengers.adults')?.value;\r\n    //get total number of passenger with new selected infant value\r\n    let Total = this.getTotalPassengers(\r\n      adultVal,\r\n      this.searchFlight?.get('passengers.child')?.value,\r\n      num\r\n    );\r\n    if (num <= adultVal && Total <= 9) {\r\n      this.searchFlight?.get('passengers.infant')?.setValue(num);\r\n      this.passengerAlert.arMsg = '';\r\n      this.passengerAlert.enMsg = '';\r\n      return this.passengerAlert;\r\n    } else {\r\n      this.passengerAlert.enMsg =\r\n        'infants number should be equal or less than Adults number and maximum number Of passenger Should Be 9';\r\n      this.passengerAlert.arMsg =\r\n        'يجب أن يكون عدد الأطفال الرضع مساوياً أو أقل من عدد البالغين والحد الأقصى لعدد الركاب يجب أن يكون 9';\r\n      return this.passengerAlert;\r\n    }\r\n  }\r\n  /**\r\n   * this function is responsible to change Value Of Class Type\r\n   * @params class value selected from list view\r\n   */\r\n  setClassValue(classVal: string) {\r\n    this.searchFlight.controls['class'].setValue(classVal);\r\n  }\r\n  /**\r\n   * this function is responsible to exchange between destinations\r\n   * @params item which i want to exchange (from Type searchBoxFlights)\r\n   */\r\n  switchDestination(item : any) {\r\n    let destination1 = item.get(\"landing\")?.value;\r\n    let destination2 = item.get(\"departing\")?.value;\r\n    item.get(\"departing\")?.setValue(destination1);\r\n    item.get(\"landing\")?.setValue(destination2);\r\n    item.updateValueAndValidity();\r\n  }\r\n  /**\r\n   * this function is responsible to return current Date\r\n   */\r\n  todayDate() {\r\n    let date = new Date();\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n    /**\r\n   * this function is responsible to validate the Multi City searchbox Dates\r\n   * @retuer string with alert message if it has error else return true\r\n   */\r\n  validateMultiCityDates(){\r\n    if(this.flightsArray.length > 1){\r\n      for(let i=0; i<this.flightsArray.length; i++){\r\n        //if the current date is the last one in array compare it with the previous one \r\n        if(i == this.flightsArray.length-1){\r\n          if(this.flightsArray.at(i)?.get('departingD')?.value < this.flightsArray.at(i-1).get('departingD')?.value){\r\n            this.validMultiDateAlert.enMsg='The First Flight should Have A date Before next Flight';\r\n            this.validMultiDateAlert.arMsg='يجب أن يكون للرحلة الأولى تاريخ قبل الرحلة التالية';\r\n          }\r\n          break;\r\n        }\r\n        else{\r\n          let nextDate = new Date( this.flightsArray.at(i+1)?.get('departingD')?.value) ;\r\n\r\n          let currentDate = this.flightsArray.at(i).get('departingD')?.value;\r\n          //check if we have a next date with value Or not\r\n\r\n          if(nextDate == undefined || nextDate == null){\r\n            break;\r\n          }\r\n          else{\r\n            //compare between current and next Date\r\n            if(nextDate.getTime() < currentDate.getTime()){\r\n              this.validMultiDateAlert.enMsg='The First Flight should Have A date Before next Flight';\r\n              this.validMultiDateAlert.arMsg='يجب أن يكون للرحلة الأولى تاريخ قبل الرحلة التالية';\r\n              this.flightsArray.at(i+1)?.get('departingD')?.setValue('');\r\n            }\r\n            else{\r\n              this.validMultiDateAlert.enMsg='True';\r\n              this.validMultiDateAlert.arMsg='True';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this.validMultiDateAlert\r\n  }\r\n  /**\r\n   * this function is responsible to set the value of depart Date after validate it\r\n   * @params depart date should be format as 2023-08-01\r\n   * @params flightIndex number for\r\n   * @retuen object with empty message if validation is true or object with error messages\r\n   */\r\n  setDepDate(depDate: string, flightIndex: number) {\r\n    let date = new Date(depDate).toISOString().split('T')[0]; //making date as 2023-08-01 format to check the condition\r\n    this.dateAlert.enMsg = '';\r\n    this.dateAlert.arMsg = '';\r\n    //check if date is previous than today or not\r\n    if (date < this.todayDate()) {\r\n      (<FormArray>this.searchFlight?.get('Flights'))\r\n        .at(flightIndex)\r\n        .get('departingD')\r\n        ?.setValue(this.todayDate());\r\n      this.dateAlert.enMsg = \"You Shouldn't select a Previous Date\";\r\n      this.dateAlert.arMsg = 'لا يجب عليك تحديد تاريخ سابق';\r\n    } else {\r\n      //check if the return date equal to depart (when the user enters the return date first)\r\n      if (this.searchFlight.controls['returnDate'].value == date) {\r\n        this.dateAlert.enMsg =\r\n          'This Date Is Similar to Return date, You Should Select Another one';\r\n        this.dateAlert.arMsg =\r\n          'هذا التاريخ مشابه لتاريخ العودة ، يجب عليك تحديد تاريخ آخر';\r\n        (<FormArray>this.searchFlight?.get('Flights'))\r\n          .at(flightIndex)\r\n          .get('departingD')\r\n          ?.setValue(this.todayDate());\r\n      } else {\r\n        (<FormArray>this.searchFlight?.get('Flights'))\r\n          .at(flightIndex)\r\n          .get('departingD')\r\n          ?.setValue(depDate);\r\n      }\r\n    }\r\n    return this.dateAlert;\r\n  }\r\n  /**\r\n   * this function is responsible to set the value of Return Date after validate it\r\n   * @params Return date should be format as 2023-08-01\r\n   * @retuen object with empty message if validation is true or object with error messages\r\n   */\r\n  setRetDate(retDate: string) {\r\n    this.retDateAlert.enMsg = '';\r\n    this.retDateAlert.arMsg = '';\r\n    if (retDate) {\r\n      let depDate = (<FormArray>this.searchFlight?.get('Flights'))\r\n      .at(0)\r\n      ?.get('departingD')?.value;\r\n      //check if date is previous than today\r\n      if (retDate <= this.todayDate()) {\r\n        this.retDateAlert.enMsg = 'You Should select a date after this day';\r\n        this.retDateAlert.arMsg = 'يجب عليك تحديد تاريخ بعد هذا اليوم';\r\n      }\r\n      //check of date is is previous than depart date\r\n      else if (retDate < depDate) {\r\n        this.retDateAlert.enMsg =\r\n          'You Should Select a date After your Depart Date';\r\n        this.retDateAlert.arMsg =\r\n          'يجب عليك تحديد تاريخ بعد تاريخ المغادرة الخاص بك';\r\n      }\r\n      //if all validation is true then go to else condition\r\n      else {\r\n        this.searchFlight.controls['returnDate'].setValue(retDate);\r\n      }\r\n    } else {\r\n      this.retDateAlert.enMsg = 'You Should Select a return Date';\r\n      this.retDateAlert.arMsg = 'يجب عليك تحديد تاريخ العودة';\r\n    }\r\n    return this.retDateAlert;\r\n    \r\n  }\r\n  /**\r\n   * this function is responsible to set the second flight of flights array if the flight type is roundtrip\r\n   */\r\n  setRetFlight() {\r\n    if(this.flightsArray.length == 1)\r\n    (<FormArray>this.searchFlight.get('Flights')).push(\r\n      new FormGroup({\r\n        departing: new FormControl(this.flightsArray.at(0).get('landing')?.value, [\r\n          Validators.required,\r\n        ]),\r\n        landing: new FormControl(this.flightsArray.at(0).get('departing')?.value, [\r\n          Validators.required,\r\n        ]),\r\n        departingD: new FormControl(this.searchFlight.get('returnDate')?.value),\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * this function is responsible to generate Search Id\r\n   */\r\n  id() {\r\n    let date = new Date();\r\n    let myId =\r\n      date.getFullYear() +\r\n      'B' +\r\n      date.getUTCMonth() +\r\n      'I' +\r\n      date.getUTCDay() +\r\n      'S' +\r\n      date.getMilliseconds() +\r\n      'H' +\r\n      Math.floor(Math.random() * (9 - 0 + 1)) +\r\n      0 +\r\n      'B' +\r\n      Math.floor(Math.random() * (9 - 0 + 1)) +\r\n      0 +\r\n      'I' +\r\n      Math.floor(Math.random() * (9 - 0 + 1)) +\r\n      0 +\r\n      'S' +\r\n      Math.floor(Math.random() * (9 - 0 + 1)) +\r\n      0 +\r\n      'H' +\r\n      Math.floor(Math.random() * (9 - 0 + 1)) +\r\n      0 +\r\n      'I' +\r\n      Math.floor(Math.random() * (9 - 0 + 1)) +\r\n      0;\r\n    return myId;\r\n  }\r\n  /**\r\n   * this function is responsible to split the airport code from Depart Or Land input\r\n   * @params spiltIndex with index hav the airport code (0 or 1)\r\n   * @params splitPattern pattern used to split the airport string and get separate code alone\r\n   * @params airport whicj selected from depart or land airports Input\r\n   * @retuen airport code\r\n   */\r\n  getAirportCode(spiltIndex: number, splitPattern: string, airport: string) {\r\n    let airportCode = airport.split(splitPattern)[spiltIndex];\r\n    return airportCode;\r\n  }\r\n  /**\r\n   * match Flights form array values with FlightInfoModule\r\n   */\r\n  getFlightInfo(spiltIndex: number, splitPattern: string) {\r\n    let flightout: searchBoxFlights[] = [];\r\n    //if flight type is round trip return array of two flights with depart city, land city and depart date\r\n    if (this.searchFlight.get('flightType')?.value == 'RoundTrip') {\r\n      const roundElement1 = (<FormArray>this.searchFlight.get('Flights'))\r\n        .controls[0]; //first flight of RoundTrip\r\n      var depart = this.getAirportCode(\r\n        spiltIndex,\r\n        splitPattern,\r\n        roundElement1.value['departing']\r\n      );\r\n      var landing = this.getAirportCode(\r\n        spiltIndex,\r\n        splitPattern,\r\n        roundElement1.value['landing']\r\n      );\r\n      let depFlight: searchBoxFlights = {\r\n        departing: depart,\r\n        landing: landing,\r\n        departingD: this.datePipe.transform(\r\n          roundElement1.value['departingD'],\r\n          'MMMM dd, y'\r\n        ),\r\n      };\r\n      flightout.push(depFlight);\r\n\r\n      //switch depart and land airport codes for the second flight and push it on flightout array\r\n      let landFlight: searchBoxFlights = {\r\n        departing: landing,\r\n        landing: depart,\r\n        departingD: this.datePipe.transform(\r\n          this.searchFlight.controls['returnDate'].value,\r\n          'MMMM dd, y'\r\n        ),\r\n      };\r\n      flightout.push(landFlight);\r\n      return flightout;\r\n    }\r\n    //if flight type is oneWay Or Multi then loop on flights array length and push all the flights into flightout\r\n    for (\r\n      let index = 0;\r\n      index < (<FormArray>this.searchFlight.get('Flights')).length;\r\n      index++\r\n    ) {\r\n      const element = (<FormArray>this.searchFlight.get('Flights')).controls[\r\n        index\r\n      ];\r\n      let flight: searchBoxFlights = {\r\n        departing: this.getAirportCode(\r\n          spiltIndex,\r\n          splitPattern,\r\n          element.value['departing']\r\n        ),\r\n        landing: this.getAirportCode(\r\n          spiltIndex,\r\n          splitPattern,\r\n          element.value['landing']\r\n        ),\r\n        departingD: this.datePipe.transform(\r\n          element.value['departingD'],\r\n          'MMMM dd, y'\r\n        ),\r\n      };\r\n      flightout.push(flight);\r\n    }\r\n    return flightout;\r\n  }\r\n  /**\r\n   * this function is responsible to return string of flights in KWI-CAI-March%2015%202019_ format\r\n   */\r\n  flightInfoFormatter(array: searchBoxFlights[]) {\r\n    let FlightsInfoArray: string = '';\r\n    for (let element of array) {\r\n      let fligt: string =\r\n        element.departing +\r\n        '-' +\r\n        element.landing +\r\n        '-' +\r\n        element.departingD +\r\n        '_';\r\n      FlightsInfoArray = FlightsInfoArray + fligt;\r\n    }\r\n    return FlightsInfoArray.slice(0, -1);\r\n  }\r\n  /**\r\n   * this function is responsible to convert array of passanger type number to A-1-C-0-I-0\r\n   * @params passenger object with total numbers of adults,child and infants\r\n   * @example 'en/KWD/EG/RoundTrip/KWI-CAI-August%2019,%202023_CAI-KWI-August%2031,%202023/2023B7I0S617H00B50I90S10H20I30/A-1-C-0-I-0/Economy/false'\r\n   */\r\n  passengerFormatter(passengerObj: searchBoxPassengers) {\r\n    let passengersString: string;\r\n    passengersString =\r\n      'A-' +\r\n      passengerObj.adults +\r\n      '-C-' +\r\n      passengerObj.child +\r\n      '-I-' +\r\n      passengerObj.infant;\r\n    return passengersString;\r\n  }\r\n  /**\r\n   * this function is responsible to return link to use it to navigate to search results with all data of search box\r\n   */\r\n  getSearchresultLink(\r\n    lang: string,\r\n    currency: string,\r\n    pointOfSale: string,\r\n    spiltIndex: number,\r\n    splitPattern: string\r\n  ) {\r\n    let flightList = this.getFlightInfo(spiltIndex, splitPattern);\r\n    let searchApi: searchFlightModel = {\r\n      lan: lang,\r\n      currency: currency,\r\n      pointOfReservation: pointOfSale,\r\n      flightType: this.searchFlight.get('flightType')?.value,\r\n      flightsInfo: this.flightInfoFormatter(flightList),\r\n      passengers: this.passengerFormatter(\r\n        this.searchFlight.get('passengers')?.value\r\n      ),\r\n      Cclass: this.searchFlight.get('class')?.value,\r\n      serachId: this.id(),\r\n      showDirect: this.searchFlight.get('Direct')?.value,\r\n      preferredAirLine: 'all',\r\n    };\r\n    this.resultLink = searchApi;\r\n    return `${searchApi.lan}/${searchApi.currency}/${searchApi.pointOfReservation}/${searchApi.flightType}/${searchApi.flightsInfo}/${searchApi.serachId}/${searchApi.passengers}/${searchApi.Cclass}/${searchApi.showDirect}`;\r\n  }\r\n  onSubmit(lang: string,currency: string,pointOfSale: string,spiltIndex: number,splitPattern: string) {\r\n    if (!this.searchFlight.value) {\r\n      this.searchFlight.markAllAsTouched(); //used this function to make a red border around invalid inputs\r\n      return '';\r\n    } else {\r\n      //call all functions validation for all passengers type and flight dates\r\n      let adult = this.changeAdultPassenger(this.searchFlight?.get('passengers.adult')?.value);\r\n      let child = this.changeChildPassenger(this.searchFlight?.get('passengers.child')?.value);\r\n      let infant = this.changeinfantPassenger( this.searchFlight?.get('passengers.infant')?.value);\r\n      var retDate: AlertMsgModel = { arMsg: '', enMsg: '' };\r\n      let depDate = this.setDepDate((<FormArray>this.searchFlight?.get('Flights')).at(0)?.get('departingD')?.value,0);\r\n\r\n      if(this.searchFlight.controls['flightType']?.value == 'roundtrip' || this.searchFlight.controls['flightType']?.value == 'RoundTrip' || this.searchFlight.controls['flightType']?.value == 'roundTrip') {\r\n        //set return date value\r\n        retDate = this.setRetDate(this.searchFlight.controls['returnDate'].value);\r\n        //change between depart and land cities and pushing it to flights array\r\n        this.setRetFlight();\r\n      }\r\n      else if(this.searchFlight.controls['flightType']?.value == 'oneway' || this.searchFlight.controls['flightType']?.value == 'OneWay' || this.searchFlight.controls['flightType']?.value == 'oneWay'){\r\n        if(this.flightsArray.length>1){\r\n          this.removeFlight();\r\n        }\r\n      }\r\n\r\n      //If All Validations and conditions are true then save the form at local storage and go to search Results\r\n      if (!adult.enMsg &&!child.enMsg &&!infant.enMsg &&!depDate.enMsg && !retDate?.enMsg) {\r\n        return this.getSearchresultLink(lang,currency,pointOfSale,spiltIndex,splitPattern);\r\n      } else {\r\n        return { adult, child, infant, retDate, depDate };\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  /**\r\n   * this function is responsible to destory any opened subscription on this service\r\n   */\r\n  destroyer() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { EnvironmentService } from '../../shared/services/environment.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { userLoginForm, userModel, userSignupForm } from '../interfaces';\r\nimport { Observable, catchError, retry, take } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserManagmentApiService {\r\n\r\n  public http = inject(HttpClient)\r\n  public env = inject(EnvironmentService)\r\n\r\n  constructor() { }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param body [Login form value]\r\n   * @returns all the user data needed to be authinticated within the application\r\n   */\r\n  login(body: userLoginForm):Observable<userModel> {\r\n    let api = `${this.env.users}/api/Account/Login`\r\n    return this.http.post<userModel>(api, body).pipe(retry(3), take(1), catchError(err=>{throw err})\r\n    )\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param body [Signup form value]\r\n   * @returns all the user data needed to be authinticated within the application\r\n   * also saves a new user on the the database\r\n   */\r\n  signup(body: userSignupForm):Observable<userModel> {\r\n    let api = `${this.env.users}/api/Account/Register`\r\n    return this.http.post<userModel>(api, body).pipe(retry(3), take(1), catchError(err=>{throw err})\r\n    )\r\n  }\r\n  \r\n}\r\n","import { Injectable,inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { UserManagmentApiService } from './user-managment-api.service';\r\nimport { Router } from '@angular/router';\r\nimport { userModel } from '../interfaces';\r\n\r\nconst REG_DATA = 'reg_data';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserManagmentService {\r\n  //#region Variablses\r\n  subscription: Subscription = new Subscription();\r\n  api = inject(UserManagmentApiService) \r\n  loginForm: FormGroup = new FormGroup({});\r\n  registerForm: FormGroup = new FormGroup({});\r\n\r\n  loading : boolean = false\r\n\r\n  currentUser! : userModel ;\r\n  userChange : Subject<string> = new Subject\r\n  //#endregion\r\n\r\n  constructor(private __fb: FormBuilder,private __router: Router) {}\r\n  /**\r\n   * this function is responsible to initialize the Login Form\r\n   */\r\n  initLoginForm() {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl(false, [Validators.required]),\r\n    });\r\n  }\r\n  /**\r\n   * this function is responsible to initialize the Register(sign up) Form\r\n   */\r\n  initRegisterForm() {\r\n    this.registerForm = this.__fb.group( {\r\n    Isbase:new FormControl(1),\r\n    Email: new FormControl('',[Validators.email,Validators.minLength(8),Validators.required]),\r\n    Password: new FormControl('',[Validators.required,Validators.minLength(8)]),\r\n    FirstName: new FormControl(''),\r\n    LastName: new FormControl(''),\r\n    ImageURL: new FormControl(''),\r\n    PhoneNumber: new FormControl('',[Validators.required,Validators.minLength(5)]),\r\n    ConfirmPassword: new FormControl('',[Validators.required,Validators.minLength(8)]),\r\n    User_Name: new FormControl (''),\r\n    notification:new FormControl(true)\r\n    },\r\n    {\r\n      validators: this.ConfirmPasswordValidator('Password', 'ConfirmPassword'),\r\n    });\r\n  }\r\n  /**\r\n   * this function is responsible to check validation between password and confirm password\r\n   */\r\n  ConfirmPasswordValidator(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n      let control = formGroup.controls[controlName];\r\n      let matchingControl = formGroup.controls[matchingControlName];\r\n\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ custom: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n  /**\r\n   * this function is responsible to make intgeration between front and backend request (USER LOGIN)\r\n   * @params router navigation name to navigate to another page (HOME PAGE) after login\r\n   */\r\n  loginSubmit(routerName:string){\r\n    this.loading = true\r\n    if(this.loginForm.invalid){\r\n      this.loginForm.markAllAsTouched()\r\n      this.loading = false\r\n    }\r\n    else {\r\n      this.subscription.add(\r\n        this.api.login(this.loginForm.value).subscribe((val:userModel)=>{\r\n          console.log(\"show me login submit\",val);\r\n          this.loading = false\r\n          this.currentUser = val\r\n          this.userChange.next('logedin')\r\n          // this.__router.navigate([`/${routerName}`])     //navigate to paramter name page after login\r\n          // window.location.reload();\r\n        },\r\n        (err:any)=>{console.log(\"user login error\",err);this.loading = false})\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   * this function is responsible to make intgeration between front and backend request (USER REGISTER)\r\n   * @params router navigation name to navigate to another page (LOGIN PAGE) after register\r\n  */\r\n  regitserSubmit(routerName:string){\r\n    this.loading = true\r\n    if(this.registerForm.invalid){\r\n      this.registerForm.markAllAsTouched();\r\n      this.loading = false\r\n    }\r\n    else{\r\n      this.api.signup(this.registerForm.value).subscribe((val:any)=>{\r\n        console.log(\"show me register submit\",val)\r\n        localStorage.setItem(REG_DATA,JSON.stringify(this.registerForm.value))\r\n        this.loading = false\r\n        this.currentUser = val\r\n        this.userChange.next('signedup')\r\n        // this.__router.navigate([`/${routerName}`]) //navigate to paramter name page after registerate the account\r\n      },(error:any)=>{\r\n        console.log(\"show me signup error\",error);\r\n        this.loading = false\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * this function is responsible to destory any opened subscription on this service\r\n   */\r\n  destroyer() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { EnvironmentService } from '../shared/services/environment.service';\r\nimport { catchError, map, retry, take } from 'rxjs';\r\nimport { FlightSearchResult } from '../flight-result/interfaces';\r\nimport { confirmationModel } from './interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmationApiService {\r\n\r\n  public http = inject(HttpClient)\r\n  public env = inject(EnvironmentService)\r\n\r\n  constructor() { }\r\n  /**\r\n   * \r\n   * @param url \r\n   * @returns  the payment result status \r\n   */\r\n  getPaymentResult(url: string) {\r\n    let api = `${this.env.prepay}/api/paymentresult?${url}`;\r\n    return this.http.get<any>(api).pipe(\r\n      take(1),\r\n      map(\r\n        (result) => { return result; }\r\n      )\r\n    )\r\n  }\r\n  /**\r\n   *\r\n   * @param tok \r\n   * @param url \r\n   * @returns status after successful payment\r\n   */\r\n  PostProcessing(tok: string, url: string) {\r\n    let api = `${url}&tok=${tok}`;\r\n    return this.http.get<any>(api).pipe(\r\n      take(1),\r\n      map((result) => {\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param HGNu \r\n   * @param searchid \r\n   * @param tok \r\n   * @returns flight confirmation details after payment has been finshed\r\n   */\r\n  getConfirmation(HGNu: string, searchid: string,tok?:string) {\r\n    let api = `${this.env.BookingFlow}/api/BookingConfirmation?HG=${HGNu}&SId=${searchid}&tok=${tok}`;\r\n    return this.http.get<confirmationModel>(api).pipe(\r\n      retry(3),\r\n      take(1),\r\n      map((result) => {\r\n        return result;\r\n      }),catchError((err:any)=>{console.log(\"CONFIRMATION ERROR\",err);throw err})\r\n    );\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { ConfirmationApiService } from './confirmation-api.service';\r\nimport { FlightSearchResult } from '../flight-result/interfaces';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport { confirmationModel } from './interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmationService {\r\n\r\n  api = inject(ConfirmationApiService)\r\n\r\n  loading : boolean = false\r\n  confirmationData! : confirmationModel \r\n  wgoDeebUrl! : SafeUrl;\r\n  error:any\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  /**\r\n   * fetching confirmation data\r\n   * update state of [confirmationData:FlightSearchResult] in case of success response\r\n   * update loading state\r\n   * @param searchId \r\n   * @param hgNum \r\n   * @param tok \r\n   */\r\n  getConfirmationDate(searchId:string,hgNum:string,tok:string){\r\n    this.loading = true\r\n    this.error = undefined\r\n    this.api.getConfirmation(hgNum,searchId,tok).subscribe((res)=>{\r\n      if(res){\r\n        this.confirmationData = res\r\n        this.formatWegoClicktUrl()\r\n        this.loading = false\r\n      }\r\n    },(err)=>{\r\n      this.error = err\r\n      this.loading = false\r\n    })\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * \r\n   * @returns formatt wgo deeb url\r\n   */\r\n  formatWegoClicktUrl(){\r\n    let comm_currency_code ='USD';\r\n    let bv_currency_code ='KWD';\r\n    let transaction_id = this.confirmationData.pnr;\r\n    let total_booking_value = this.confirmationData.fareAmount;\r\n    let commission =total_booking_value *.02;\r\n    let status ='confirmed';\r\n    if(localStorage.getItem('click_id')){\r\n      var url = `https://secure.wego.com/analytics/v2/conversions?conversion_id=c-wego-khaleejgate.com&click_id=${localStorage.getItem('click_id')}&comm_currency_code=${comm_currency_code}&bv_currency_code=${bv_currency_code}&transaction_id=${transaction_id}&commission=${commission}&total_booking_value=${total_booking_value}&status=${status}`;\r\n    }\r\n    else {\r\n      console.log(\"CLICK ID NOT FOUND\");\r\n      var url = `https://secure.wego.com/analytics/v2/conversions?conversion_id=c-wego-triphands.com&click_id=${'no_click_id'}&comm_currency_code=${comm_currency_code}&bv_currency_code=${bv_currency_code}&transaction_id=${transaction_id}&commission=${commission}&total_booking_value=${total_booking_value}&status=${status}`;\r\n    }\r\n    \r\n    this.wgoDeebUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Public API Surface of rp-travel-ui\r\n */\r\n\r\nexport * from './lib/rp-travel-ui.service';\r\nexport * from './lib/rp-travel-ui.component';\r\nexport * from './lib/rp-travel-ui.module';\r\n\r\n\r\n// Home Page\r\nexport * from './lib/home-page/services/home-page-api.service'\r\nexport * from './lib/home-page/services/home-page.service'\r\nexport * from './lib/home-page/interfaces'\r\n\r\n\r\n\r\n// Environment \r\nexport * from './lib/shared/services/environment.service'\r\nexport * from './lib/shared/interfaces'\r\n\r\n\r\n// Flight Checkout\r\nexport * from './lib/flight-checkout/services/flight-checkout-api.service'\r\nexport * from './lib/flight-checkout/services/flight-checkout.service'\r\nexport * from './lib/flight-checkout/interfaces'\r\n\r\n\r\n// Flight Result\r\nexport * from './lib/flight-result/services/flight-result-api.service'\r\nexport * from './lib/flight-result/services/flight-result.service'\r\nexport * from './lib/flight-result/interfaces'\r\n\r\n\r\n// Flight Search\r\nexport * from './lib/flight-search/services/flight-search-api.service'\r\nexport * from './lib/flight-search/services/flight-search.service'\r\nexport * from './lib/flight-search/interfaces'\r\n\r\n// User Managment\r\nexport * from './lib/user-managment/services/user-managment-api.service'\r\nexport * from './lib/user-managment/services/user-managment.service'\r\nexport * from './lib/user-managment/interfaces'\r\n\r\n//flight confirmation\r\nexport * from './lib/flight-confirmation/confirmation.service'\r\nexport * from './lib/flight-confirmation/confirmation-api.service'\r\nexport * from './lib/flight-confirmation/interfaces'\r\n\r\n// pipes\r\nexport * from './lib/shared/pipes/cod-to-city.pipe'\r\nexport * from './lib/shared/pipes/councode.pipe'\r\nexport * from './lib/shared/pipes/duration-to-hour-min.pipe'\r\nexport * from './lib/shared/pipes/filter-city.pipe'\r\nexport * from './lib/shared/pipes/highlighter.pipe'\r\nexport * from './lib/shared/pipes/hotelecites.pipe'\r\nexport * from './lib/shared/pipes/hour-minute.pipe'\r\nexport * from './lib/shared/pipes/limit-to.pipe'\r\nexport * from './lib/shared/pipes/exchange.pipe'\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":"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"}