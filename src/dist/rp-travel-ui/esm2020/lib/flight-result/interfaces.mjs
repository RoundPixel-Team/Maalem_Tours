/**
 * Filter Model
 * [this is a generic model for the filter containing all filter criteria and you can use only what you need]
 */
export class flightResultFilter {
    constructor(sameAirline, priceMin, priceMax, durationMin, durationMax, depatingMin, departingMax, arrivingMin, arrivingMax, returnMin, returnMax, stops, experience, flexibleTicket, airlines, bookingSites) {
        this.sameAirline = sameAirline;
        this.priceMin = priceMin;
        this.priceMax = priceMax;
        this.durationMin = durationMin;
        this.durationMax = durationMax;
        this.depatingMin = depatingMin;
        this.departingMax = departingMax;
        this.arrivingMin = arrivingMin;
        this.arrivingMax = arrivingMax;
        this.returnMin = returnMin;
        this.returnMax = returnMax;
        this.stops = stops;
        this.experience = experience;
        this.flexibleTicket = flexibleTicket;
        this.airlines = airlines;
        this.bookingSites = bookingSites;
    }
}
export class SearchFlightModule {
    constructor(lan, currency, pointOfReservation, flightType, flightsInfo, passengers, Cclass, serachId, showDirect, preferredAirLine) {
        this.lan = lan;
        this.currency = currency;
        this.pointOfReservation = pointOfReservation;
        this.flightType = flightType;
        this.flightsInfo = flightsInfo;
        this.passengers = passengers;
        this.Cclass = Cclass;
        this.serachId = serachId;
        this.showDirect = showDirect;
        this.preferredAirLine = preferredAirLine;
    }
}
//# sourceMappingURL=data:application/json;base64,